From 1bb953c6766c9cc4372ca23a7c5b7de101324218 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 29 Jan 2020 04:24:58 +0000
Subject: [PATCH] include: Add xact3wb.h.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/Makefile.in |  1 +
 include/xact3wb.h   | 63 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 64 insertions(+)
 create mode 100644 include/xact3wb.h

diff --git a/include/Makefile.in b/include/Makefile.in
index 8284d6fdf32..b1e7d0084ff 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -772,6 +772,7 @@ SOURCES = \
 	wtypes.idl \
 	wuapi.idl \
 	x3daudio.h \
+	xact3wb.h \
 	xapo.idl \
 	xapofx.h \
 	xaudio2.idl \
diff --git a/include/xact3wb.h b/include/xact3wb.h
new file mode 100644
index 00000000000..b4c5a53d40c
--- /dev/null
+++ b/include/xact3wb.h
@@ -0,0 +1,63 @@
+/*
+ * Copyright (c) 2020 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+#ifndef __XACT3WB_H__
+#define __XACT3WB_H__
+
+typedef union WAVEBANKMINIWAVEFORMAT
+{
+    struct
+    {
+        DWORD wFormatTag     :  2;
+        DWORD nChannels      :  3;
+        DWORD nSamplesPerSec : 18;
+        DWORD wBlockAlign    :  8;
+        DWORD wBitsPerSample :  1;
+    } DUMMYSTRUCTNAME;
+    DWORD dwValue;
+} WAVEBANKMINIWAVEFORMAT;
+
+typedef struct WAVEBANKREGION
+{
+    DWORD dwOffset;
+    DWORD dwLength;
+} WAVEBANKREGION;
+
+typedef struct WAVEBANKSAMPLEREGION
+{
+    DWORD dwStartSample;
+    DWORD dwTotalSamples;
+} WAVEBANKSAMPLEREGION;
+
+typedef struct WAVEBANKENTRY
+{
+    union
+    {
+        struct
+        {
+            DWORD dwFlags  :  4;
+            DWORD Duration : 28;
+        } DUMMYSTRUCTNAME;
+        DWORD dwFlagsAndDuration;
+    } DUMMYUNIONNAME;
+
+    WAVEBANKMINIWAVEFORMAT Format;
+    WAVEBANKREGION PlayRegion;
+    WAVEBANKSAMPLEREGION LoopRegion;
+} WAVEBANKENTRY;
+
+#endif /* __XACT3WB_H__ */
From 948a6a47b8dbd0ddd86cad04de03f0e4ba81b65d Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Fri, 20 Mar 2020 13:37:35 +0100
Subject: [PATCH] include: Add missing packing, structs and defines for
 xact3wb.h.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3wb.h | 93 +++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 89 insertions(+), 4 deletions(-)

diff --git a/include/xact3wb.h b/include/xact3wb.h
index b4c5a53d40c..c68d7a30fad 100644
--- a/include/xact3wb.h
+++ b/include/xact3wb.h
@@ -1,5 +1,6 @@
 /*
  * Copyright (c) 2020 Alistair Leslie-Hughes
+ * Copyright (c) 2020 Vijay Kiran Kamuju
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -18,6 +19,52 @@
 #ifndef __XACT3WB_H__
 #define __XACT3WB_H__
 
+#include <pshpack1.h>
+
+typedef DWORD WAVEBANKOFFSET;
+
+#define WAVEBANK_HEADER_SIGNATURE 0x444e4257 /* DNBW */
+#define WAVEBANK_HEADER_VERSION   44
+#define WAVEBANK_BANKNAME_LENGTH  64
+#define WAVEBANK_ENTRYNAME_LENGTH 64
+
+#define WAVEBANK_MAX_DATA_SEGMENT_SIZE     0xffffffff
+#define WAVEBANK_COMPACT_DATA_SEGMENT_SIZE 0x001fffff
+
+#define WAVEBANK_TYPE_BUFFER    0x00000000
+#define WAVEBANK_TYPE_STREAMING 0x00000001
+#define WAVEBANK_TYPE_MASK      0x00000001
+
+#define WAVEBANK_FLAGS_ENTRYNAMES    0x00010000
+#define WAVEBANK_FLAGS_COMPACT       0x00020000
+#define WAVEBANK_FLAGS_SYNC_DISABLED 0x00040000
+#define WAVEBANK_FLAGS_SEEKTABLES    0x00080000
+#define WAVEBANK_FLAGS_MASK          0x000F0000
+
+#define WAVEBANK_DVD_SECTOR_SIZE 2048
+#define WAVEBANK_DVD_BLOCK_SIZE  (WAVEBANK_DVD_SECTOR_SIZE * 16)
+#define WAVEBANK_ALIGNMENT_MIN   4
+#define WAVEBANK_ALIGNMENT_DVD   WAVEBANK_DVD_SECTOR_SIZE
+
+typedef enum WAVEBANKSEGIDX
+{
+    WAVEBANK_SEGIDX_BANKDATA = 0,
+    WAVEBANK_SEGIDX_ENTRYMETADATA,
+    WAVEBANK_SEGIDX_SEEKTABLES,
+    WAVEBANK_SEGIDX_ENTRYNAMES,
+    WAVEBANK_SEGIDX_ENTRYWAVEDATA,
+    WAVEBANK_SEGIDX_COUNT
+} WAVEBANKSEGIDX, *LPWAVEBANKSEGIDX;
+typedef const WAVEBANKSEGIDX *LPCWAVEBANKSEGIDX;
+
+#define WAVEBANKMINIFORMAT_TAG_PCM   0x0
+#define WAVEBANKMINIFORMAT_TAG_XMA   0x1
+#define WAVEBANKMINIFORMAT_TAG_ADPCM 0x2
+#define WAVEBANKMINIFORMAT_TAG_WMA   0x3
+
+#define WAVEBANKMINIFORMAT_BITDEPTH_8  0x0
+#define WAVEBANKMINIFORMAT_BITDEPTH_16 0x1
+
 typedef union WAVEBANKMINIWAVEFORMAT
 {
     struct
@@ -29,19 +76,34 @@ typedef union WAVEBANKMINIWAVEFORMAT
         DWORD wBitsPerSample :  1;
     } DUMMYSTRUCTNAME;
     DWORD dwValue;
-} WAVEBANKMINIWAVEFORMAT;
+} WAVEBANKMINIWAVEFORMAT, *LPWAVEBANKMINIWAVEFORMAT;
+typedef const WAVEBANKMINIWAVEFORMAT *LPCWAVEBANKMINIWAVEFORMAT;
 
 typedef struct WAVEBANKREGION
 {
     DWORD dwOffset;
     DWORD dwLength;
-} WAVEBANKREGION;
+} WAVEBANKREGION, *LPWAVEBANKREGION;
+typedef const WAVEBANKREGION *LPCWAVEBANKREGION;
 
 typedef struct WAVEBANKSAMPLEREGION
 {
     DWORD dwStartSample;
     DWORD dwTotalSamples;
-} WAVEBANKSAMPLEREGION;
+} WAVEBANKSAMPLEREGION, *LPWAVEBANKSAMPLEREGION;
+typedef const WAVEBANKSAMPLEREGION *LPCWAVEBANKSAMPLEREGION;
+
+typedef struct WAVEBANKHEADER
+{
+    DWORD dwSignature;
+    DWORD dwVersion;
+    DWORD dwHeaderVersion;
+    WAVEBANKREGION Segments[WAVEBANK_SEGIDX_COUNT];
+} WAVEBANKHEADER, *LPWAVEBANKHEADER;
+typedef const WAVEBANKHEADER *LPCWAVEBANKHEADER;
+
+#define WAVEBANKENTRY_XMASTREAMS_MAX  3
+#define WAVEBANKENTRY_XMACHANNELS_MAX 6
 
 typedef struct WAVEBANKENTRY
 {
@@ -58,6 +120,29 @@ typedef struct WAVEBANKENTRY
     WAVEBANKMINIWAVEFORMAT Format;
     WAVEBANKREGION PlayRegion;
     WAVEBANKSAMPLEREGION LoopRegion;
-} WAVEBANKENTRY;
+} WAVEBANKENTRY, *LPWAVEBANKENTRY;
+typedef const WAVEBANKENTRY *LPCWAVEBANKENTRY;
+
+typedef struct WAVEBANKENTRYCOMPACT
+{
+    DWORD dwOffset          : 21;
+    DWORD dwLengthDeviation : 11;
+} WAVEBANKENTRYCOMPACT, *LPWAVEBANKENTRYCOMPACT;
+typedef const WAVEBANKENTRYCOMPACT *LPCWAVEBANKENTRYCOMPACT;
+
+typedef struct WAVEBANKDATA
+{
+    DWORD dwFlags;
+    DWORD dwEntryCount;
+    CHAR  szBankName[WAVEBANK_BANKNAME_LENGTH];
+    DWORD dwEntryMetaDataElementSize;
+    DWORD dwEntryNameElementSize;
+    DWORD dwAlignment;
+    WAVEBANKMINIFORMAT CompactFormat;
+    FILETIME BuildTime;
+} WAVEBANKDATA, *LPWAVEBANKDATA;
+typedef const WAVEBANKDATA *LPCWAVEBANKDATA;
+
+#include <poppack.h>
 
 #endif /* __XACT3WB_H__ */

From 362ed8c2d5ff11c49ce42c0979048c068356758f Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Fri, 12 Jun 2020 17:59:41 -0500
Subject: [PATCH] include: Correct the name of WAVEBANKMINIWAVEFORMAT.

Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3wb.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/xact3wb.h b/include/xact3wb.h
index c68d7a30fad..81b1518930d 100644
--- a/include/xact3wb.h
+++ b/include/xact3wb.h
@@ -138,7 +138,7 @@ typedef struct WAVEBANKDATA
     DWORD dwEntryMetaDataElementSize;
     DWORD dwEntryNameElementSize;
     DWORD dwAlignment;
-    WAVEBANKMINIFORMAT CompactFormat;
+    WAVEBANKMINIWAVEFORMAT CompactFormat;
     FILETIME BuildTime;
 } WAVEBANKDATA, *LPWAVEBANKDATA;
 typedef const WAVEBANKDATA *LPCWAVEBANKDATA;
From 3a17ee90663566f7ca53e61be26f0e9bee201566 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Mon, 29 Jun 2020 11:41:29 +0200
Subject: [PATCH] include: Fix typo in DS3DALG_DEFAULT.

Spotted by Ozkan Sezer

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/dsound.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/dsound.h b/include/dsound.h
index 85235ef1bb4..bfb52a297a5 100644
--- a/include/dsound.h
+++ b/include/dsound.h
@@ -116,7 +116,7 @@ DEFINE_GUID(DSDEVID_DefaultVoiceCapture, 0xDEF00003,0x9C6D,0x47ED,0xAA,0xF1,0x4D
 
 DEFINE_GUID(DSDEVID_WinePlayback,        0x40316A1D,0x605B,0xD611,0x87,0xC6,0x00,0x80,0xAD,0x00,0x02,0xFE);
 
-#define DSD3DALG_DEFAULT GUID_NULL
+#define DS3DALG_DEFAULT GUID_NULL
 DEFINE_GUID(DS3DALG_NO_VIRTUALIZATION,      0xc241333f,0x1c1b,0x11d2,0x94,0xf5,0x00,0xc0,0x4f,0xc2,0x8a,0xca);
 DEFINE_GUID(DS3DALG_HRTF_FULL,              0xc2413340,0x1c1b,0x11d2,0x94,0xf5,0x00,0xc0,0x4f,0xc2,0x8a,0xca);
 DEFINE_GUID(DS3DALG_HRTF_LIGHT,             0xc2413342,0x1c1b,0x11d2,0x94,0xf5,0x00,0xc0,0x4f,0xc2,0x8a,0xca);
From 41288f5e6ae18491f2074a695b08f616e3dd979c Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Mon, 16 Mar 2020 01:31:24 +0100
Subject: [PATCH] include: Add xact3.h.

Based on work by Ethan Lee and Alistair Leslie-Hughes

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/Makefile.in |   1 +
 include/xact3.h     | 472 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 473 insertions(+)
 create mode 100644 include/xact3.h

diff --git a/include/Makefile.in b/include/Makefile.in
index 56c5220daf7..216adf0d7ae 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -804,6 +804,7 @@ SOURCES = \
 	wtypes.idl \
 	wuapi.idl \
 	x3daudio.h \
+	xact3.h \
 	xact3wb.h \
 	xapo.idl \
 	xapofx.h \
diff --git a/include/xact3.h b/include/xact3.h
new file mode 100644
index 00000000000..f8690775341
--- /dev/null
+++ b/include/xact3.h
@@ -0,0 +1,472 @@
+/*
+ * Copyright (C) 2020 Vijay Kiran Kamuju
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef __WINE_XACT3_H
+#define __WINE_XACT3_H
+
+#include <windows.h>
+#include <objbase.h>
+#include <float.h>
+#include <limits.h>
+#include <xact3wb.h>
+#include <xaudio2.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+DEFINE_GUID(CLSID_XACTEngine,         0xbcc782bc, 0x6492, 0x4c22, 0x8c, 0x35, 0xf5, 0xd7, 0x2f, 0xe7, 0x3c, 0x6e);
+DEFINE_GUID(CLSID_XACTAuditionEngine, 0x9ecdd80d, 0x0e81, 0x40d8, 0x89, 0x03, 0x2b, 0xf7, 0xb1, 0x31, 0xac, 0x43);
+DEFINE_GUID(CLSID_XACTDebugEngine,    0x02860630, 0xbf3b, 0x42a8, 0xb1, 0x4e, 0x91, 0xed, 0xa2, 0xf5, 0x1e, 0xa5);
+
+DEFINE_GUID(IID_IXACT3Engine,          0xb1ee676a, 0xd9cd, 0x4d2a, 0x89, 0xa8, 0xfa, 0x53, 0xeb, 0x9e, 0x48, 0x0b);
+
+typedef struct IXACT3SoundBank IXACT3SoundBank;
+typedef struct IXACT3WaveBank  IXACT3WaveBank;
+typedef struct IXACT3Cue       IXACT3Cue;
+typedef struct IXACT3Wave      IXACT3Wave;
+typedef struct IXACT3Engine    IXACT3Engine;
+
+typedef WORD  XACTCATEGORY;
+typedef BYTE  XACTCHANNEL;
+typedef WORD  XACTINDEX;
+typedef BYTE  XACTINSTANCELIMIT;
+typedef BYTE  XACTLOOPCOUNT;
+typedef BYTE  XACTNOTIFICATIONTYPE;
+typedef SHORT XACTPITCH;
+typedef LONG  XACTTIME;
+typedef WORD  XACTVARIABLEINDEX;
+typedef FLOAT XACTVARIABLEVALUE;
+typedef BYTE  XACTVARIATIONWEIGHT;
+typedef FLOAT XACTVOLUME;
+
+static const XACTTIME             XACTTIME_MIN               = INT_MIN;
+static const XACTTIME             XACTTIME_MAX               = INT_MAX;
+static const XACTTIME             XACTTIME_INFINITE          = INT_MAX;
+static const XACTINSTANCELIMIT    XACTINSTANCELIMIT_INFINITE = 0xff;
+static const XACTINSTANCELIMIT    XACTINSTANCELIMIT_MIN      = 0x00;
+static const XACTINSTANCELIMIT    XACTINSTANCELIMIT_MAX      = 0xfe;
+static const XACTINDEX            XACTINDEX_MIN              = 0x0;
+static const XACTINDEX            XACTINDEX_MAX              = 0xfffe;
+static const XACTINDEX            XACTINDEX_INVALID          = 0xffff;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_MIN   = 0x00;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_MAX   = 0xff;
+static const XACTVARIABLEVALUE    XACTVARIABLEVALUE_MIN      = -FLT_MAX;
+static const XACTVARIABLEVALUE    XACTVARIABLEVALUE_MAX      = FLT_MAX;
+static const XACTVARIABLEINDEX    XACTVARIABLEINDEX_MIN      = 0x0000;
+static const XACTVARIABLEINDEX    XACTVARIABLEINDEX_MAX      = 0xfffe;
+static const XACTVARIABLEINDEX    XACTVARIABLEINDEX_INVALID  = 0xffff;
+static const XACTCATEGORY         XACTCATEGORY_MIN           = 0x0;
+static const XACTCATEGORY         XACTCATEGORY_MAX           = 0xfffe;
+static const XACTCATEGORY         XACTCATEGORY_INVALID       = 0xffff;
+static const XACTCHANNEL          XACTCHANNEL_MIN            = 0;
+static const XACTCHANNEL          XACTCHANNEL_MAX            = 0xFF;
+static const XACTPITCH            XACTPITCH_MIN              = -1200;
+static const XACTPITCH            XACTPITCH_MAX              = 1200;
+static const XACTPITCH            XACTPITCH_MIN_TOTAL        = -2400;
+static const XACTPITCH            XACTPITCH_MAX_TOTAL        = 2400;
+static const XACTVOLUME           XACTVOLUME_MIN             = 0.0f;
+static const XACTVOLUME           XACTVOLUME_MAX             = 16777216.0f;
+static const XACTVARIABLEVALUE    XACTPARAMETERVALUE_MIN     = -FLT_MAX;
+static const XACTVARIABLEVALUE    XACTPARAMETERVALUE_MAX     = FLT_MAX;
+static const XACTLOOPCOUNT        XACTLOOPCOUNT_MIN          = 0x0;
+static const XACTLOOPCOUNT        XACTLOOPCOUNT_MAX          = 0xfe;
+static const XACTLOOPCOUNT        XACTLOOPCOUNT_INFINITE     = 0xff;
+static const DWORD                XACTWAVEALIGNMENT_MIN      = 2048;
+
+#define FACILITY_XACTENGINE 0xAC7
+#define XACTENGINEERROR(n) MAKE_HRESULT(SEVERITY_ERROR, FACILITY_XACTENGINE, n)
+
+#define XACTENGINE_E_OUTOFMEMORY               E_OUTOFMEMORY
+#define XACTENGINE_E_INVALIDARG                E_INVALIDARG
+#define XACTENGINE_E_NOTIMPL                   E_NOTIMPL
+#define XACTENGINE_E_FAIL                      E_FAIL
+
+#define XACTENGINE_E_ALREADYINITIALIZED        XACTENGINEERROR(0x001)
+#define XACTENGINE_E_NOTINITIALIZED            XACTENGINEERROR(0x002)
+#define XACTENGINE_E_EXPIRED                   XACTENGINEERROR(0x003)
+#define XACTENGINE_E_NONOTIFICATIONCALLBACK    XACTENGINEERROR(0x004)
+#define XACTENGINE_E_NOTIFICATIONREGISTERED    XACTENGINEERROR(0x005)
+#define XACTENGINE_E_INVALIDUSAGE              XACTENGINEERROR(0x006)
+#define XACTENGINE_E_INVALIDDATA               XACTENGINEERROR(0x007)
+#define XACTENGINE_E_INSTANCELIMITFAILTOPLAY   XACTENGINEERROR(0x008)
+#define XACTENGINE_E_NOGLOBALSETTINGS          XACTENGINEERROR(0x009)
+#define XACTENGINE_E_INVALIDVARIABLEINDEX      XACTENGINEERROR(0x00a)
+#define XACTENGINE_E_INVALIDCATEGORY           XACTENGINEERROR(0x00b)
+#define XACTENGINE_E_INVALIDCUEINDEX           XACTENGINEERROR(0x00c)
+#define XACTENGINE_E_INVALIDWAVEINDEX          XACTENGINEERROR(0x00d)
+#define XACTENGINE_E_INVALIDTRACKINDEX         XACTENGINEERROR(0x00e)
+#define XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX XACTENGINEERROR(0x00f)
+#define XACTENGINE_E_READFILE                  XACTENGINEERROR(0x010)
+#define XACTENGINE_E_UNKNOWNEVENT              XACTENGINEERROR(0x011)
+#define XACTENGINE_E_INCALLBACK                XACTENGINEERROR(0x012)
+#define XACTENGINE_E_NOWAVEBANK                XACTENGINEERROR(0x013)
+#define XACTENGINE_E_SELECTVARIATION           XACTENGINEERROR(0x014)
+#define XACTENGINE_E_MULTIPLEAUDITIONENGINES   XACTENGINEERROR(0x015)
+#define XACTENGINE_E_WAVEBANKNOTPREPARED       XACTENGINEERROR(0x016)
+#define XACTENGINE_E_NORENDERER                XACTENGINEERROR(0x017)
+#define XACTENGINE_E_INVALIDENTRYCOUNT         XACTENGINEERROR(0x018)
+#define XACTENGINE_E_SEEKTIMEBEYONDCUEEND      XACTENGINEERROR(0x019)
+#define XACTENGINE_E_SEEKTIMEBEYONDWAVEEND     XACTENGINEERROR(0x01a)
+#define XACTENGINE_E_NOFRIENDLYNAMES           XACTENGINEERROR(0x01b)
+#define XACTENGINE_E_AUDITION_WRITEFILE        XACTENGINEERROR(0x101)
+#define XACTENGINE_E_AUDITION_NOSOUNDBANK      XACTENGINEERROR(0x102)
+#define XACTENGINE_E_AUDITION_INVALIDRPCINDEX  XACTENGINEERROR(0x103)
+#define XACTENGINE_E_AUDITION_MISSINGDATA      XACTENGINEERROR(0x104)
+#define XACTENGINE_E_AUDITION_UNKNOWNCOMMAND   XACTENGINEERROR(0x105)
+#define XACTENGINE_E_AUDITION_INVALIDDSPINDEX  XACTENGINEERROR(0x106)
+#define XACTENGINE_E_AUDITION_MISSINGWAVE      XACTENGINEERROR(0x107)
+#define XACTENGINE_E_AUDITION_CREATEDIRECTORYFAILED XACTENGINEERROR(0x108)
+#define XACTENGINE_E_AUDITION_INVALIDSESSION   XACTENGINEERROR(0x109)
+
+static const DWORD XACT_FLAG_STOP_RELEASE    = 0x00000000;
+static const DWORD XACT_FLAG_STOP_IMMEDIATE  = 0x00000001;
+
+static const DWORD XACT_FLAG_MANAGEDATA      = 0x00000001;
+static const DWORD XACT_FLAG_BACKGROUND_MUSIC = 0x00000002;
+static const DWORD XACT_FLAG_UNITS_MS        = 0x00000004;
+static const DWORD XACT_FLAG_UNITS_SAMPLES   = 0x00000008;
+
+static const DWORD XACT_STATE_CREATED        = 0x00000001;
+static const DWORD XACT_STATE_PREPARING      = 0x00000002;
+static const DWORD XACT_STATE_PREPARED       = 0x00000004;
+static const DWORD XACT_STATE_PLAYING        = 0x00000008;
+static const DWORD XACT_STATE_STOPPING       = 0x00000010;
+static const DWORD XACT_STATE_STOPPED        = 0x00000020;
+static const DWORD XACT_STATE_PAUSED         = 0x00000040;
+static const DWORD XACT_STATE_INUSE          = 0x00000080;
+static const DWORD XACT_STATE_PREPAREFAILED  = 0x80000000;
+
+#define XACT_FLAG_GLOBAL_SETTINGS_MANAGEDATA XACT_FLAG_MANAGEDATA
+
+#define XACT_RENDERER_ID_LENGTH    0xff
+#define XACT_RENDERER_NAME_LENGTH  0xff
+#define XACT_CUE_NAME_LENGTH       0xff
+
+#define XACT_CONTENT_VERSION 46
+
+#define XACT_ENGINE_LOOKAHEAD_DEFAULT 250
+
+static const DWORD XACT_FLAG_API_AUDITION_MODE = 0x00000001;
+static const DWORD XACT_FLAG_API_DEBUG_MODE    = 0x00000002;
+
+#define XACT_DEBUGENGINE_REGISTRY_KEY   L"Software\\Microsoft\\XACT"
+#define XACT_DEBUGENGINE_REGISTRY_VALUE L"DebugEngine"
+
+typedef struct XACT_RENDERER_DETAILS
+{
+    WCHAR rendererID[XACT_RENDERER_ID_LENGTH];
+    WCHAR displayName[XACT_RENDERER_NAME_LENGTH];
+    BOOL defaultDevice;
+} XACT_RENDERER_DETAILS, *LPXACT_RENDERER_DETAILS;
+
+typedef BOOL (__stdcall *XACT_READFILE_CALLBACK)(
+    HANDLE hFile,
+    LPVOID lpBuffer,
+    DWORD nNumberOfBytesRead,
+    LPDWORD lpNumberOfBytesRead,
+    LPOVERLAPPED lpOverlapped
+);
+typedef BOOL (__stdcall *XACT_GETOVERLAPPEDRESULT_CALLBACK)(
+    HANDLE hFile,
+    LPOVERLAPPED lpOverlapped,
+    LPDWORD lpNumberOfBytesTransferred,
+    BOOL bWait
+);
+
+typedef struct XACT_FILEIO_CALLBACKS
+{
+    XACT_READFILE_CALLBACK readFileCallback;
+    XACT_GETOVERLAPPEDRESULT_CALLBACK getOverlappedResultCallback;
+} XACT_FILEIO_CALLBACKS, *PXACT_FILEIO_CALLBACKS;
+typedef const XACT_FILEIO_CALLBACKS *PCXACT_FILEIO_CALLBACKS;
+
+typedef struct XACT_STREAMING_PARAMETERS
+{
+    HANDLE file;
+    DWORD offset;
+    DWORD flags;
+    WORD packetSize;
+} XACT_STREAMING_PARAMETERS, *LPXACT_STREAMING_PARAMETERS, XACT_WAVE_STREAMING_PARAMETERS, *LPXACT_WAVE_STREAMING_PARAMETERS;
+typedef const XACT_STREAMING_PARAMETERS *LPCXACT_STREAMING_PARAMETERS;
+typedef const XACT_WAVE_STREAMING_PARAMETERS *LPCXACT_WAVE_STREAMING_PARAMETERS;
+
+typedef struct XACTCHANNELMAPENTRY
+{
+    XACTCHANNEL InputChannel;
+    XACTCHANNEL OutputChannel;
+    XACTVOLUME Volume;
+} XACTCHANNELMAPENTRY, *LPXACTCHANNELMAPENTRY;
+typedef const XACTCHANNELMAPENTRY *LPCXACTCHANNELMAPENTRY;
+
+typedef struct XACTCHANNELMAP
+{
+    XACTCHANNEL EntryCount;
+    XACTCHANNELMAPENTRY* paEntries;
+} XACTCHANNELMAP, *LPXACTCHANNELMAP;
+typedef const XACTCHANNELMAP *LPCXACTCHANNELMAP;
+
+typedef struct XACTCHANNELVOLUMEENTRY
+{
+    XACTCHANNEL EntryIndex;
+    XACTVOLUME Volume;
+} XACTCHANNELVOLUMEENTRY, *LPXACTCHANNELVOLUMEENTRY;
+typedef const XACTCHANNELVOLUMEENTRY *LPCXACTCHANNELVOLUMEENTRY;
+
+typedef struct XACTCHANNELVOLUME
+{
+    XACTCHANNEL EntryCount;
+    XACTCHANNELVOLUMEENTRY* paEntries;
+} XACTCHANNELVOLUME, *LPXACTCHANNELVOLUME;
+typedef const XACTCHANNELVOLUME *LPCXACTCHANNELVOLUME;
+
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_CUEPREPARED                     = 1;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_CUEPLAY                         = 2;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_CUESTOP                         = 3;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_CUEDESTROYED                    = 4;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_MARKER                          = 5;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED              = 6;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEBANKDESTROYED               = 7;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_LOCALVARIABLECHANGED            = 8;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_GLOBALVARIABLECHANGED           = 9;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_GUICONNECTED                    = 10;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_GUIDISCONNECTED                 = 11;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEPREPARED                    = 12;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEPLAY                        = 13;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVESTOP                        = 14;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVELOOPED                      = 15;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEDESTROYED                   = 16;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEBANKPREPARED                 = 17;
+static const XACTNOTIFICATIONTYPE XACTNOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT = 18;
+
+static const BYTE XACT_FLAG_NOTIFICATION_PERSIST = 0x01;
+
+#include <pshpack1.h>
+
+typedef struct XACT_NOTIFICATION_DESCRIPTION
+{
+    XACTNOTIFICATIONTYPE type;
+    BYTE flags;
+    IXACT3SoundBank *pSoundBank;
+    IXACT3WaveBank *pWaveBank;
+    IXACT3Cue *pCue;
+    IXACT3Wave *pWave;
+    XACTINDEX cueIndex;
+    XACTINDEX waveIndex;
+    void* pvContext;
+} XACT_NOTIFICATION_DESCRIPTION, *LPXACT_NOTIFICATION_DESCRIPTION;
+typedef const XACT_NOTIFICATION_DESCRIPTION *LPCXACT_NOTIFICATION_DESCRIPTION;
+
+typedef struct XACT_NOTIFICATION_CUE
+{
+    XACTINDEX cueIndex;
+    IXACT3SoundBank *pSoundBank;
+    IXACT3Cue *pCue;
+} XACT_NOTIFICATION_CUE, *LPXACT_NOTIFICATION_CUE;
+typedef const XACT_NOTIFICATION_CUE *LPCXACT_NOTIFICATION_CUE;
+
+typedef struct XACT_NOTIFICATION_MARKER
+{
+    XACTINDEX cueIndex;
+    IXACT3SoundBank *pSoundBank;
+    IXACT3Cue *pCue;
+    DWORD marker;
+} XACT_NOTIFICATION_MARKER, *LPXACT_NOTIFICATION_MARKER;
+typedef const XACT_NOTIFICATION_MARKER *LPCXACT_NOTIFICATION_MARKER;
+
+typedef struct XACT_NOTIFICATION_SOUNDBANK
+{
+    IXACT3SoundBank *pSoundBank;
+} XACT_NOTIFICATION_SOUNDBANK, *LPXACT_NOTIFICATION_SOUNDBANK;
+typedef const XACT_NOTIFICATION_SOUNDBANK *LPCXACT_NOTIFICATION_SOUNDBANK;
+
+typedef struct XACT_NOTIFICATION_WAVEBANK
+{
+    IXACT3WaveBank *pWaveBank;
+} XACT_NOTIFICATION_WAVEBANK, *LPXACT_NOTIFICATION_WAVEBANK;
+typedef const XACT_NOTIFICATION_WAVEBANK *LPCXACT_NOTIFICATION_WAVEBANK;
+
+typedef struct XACT_NOTIFICATION_VARIABLE
+{
+    XACTINDEX cueIndex;
+    IXACT3SoundBank *pSoundBank;
+    IXACT3Cue *pCue;
+    XACTVARIABLEINDEX variableIndex;
+    XACTVARIABLEVALUE variableValue;
+    BOOL local;
+} XACT_NOTIFICATION_VARIABLE, *LPXACT_NOTIFICATION_VARIABLE;
+typedef const XACT_NOTIFICATION_VARIABLE *LPCXACT_NOTIFICATION_VARIABLE;
+
+typedef struct XACT_NOTIFICATION_GUI
+{
+    DWORD reserved;
+} XACT_NOTIFICATION_GUI, *LPXACT_NOTIFICATION_GUI;
+typedef const XACT_NOTIFICATION_GUI *LPCXACT_NOTIFICATION_GUI;
+
+typedef struct XACT_NOTIFICATION_WAVE
+{
+    IXACT3WaveBank *pWaveBank;
+    XACTINDEX waveIndex;
+    XACTINDEX cueIndex;
+    IXACT3SoundBank *pSoundBank;
+    IXACT3Cue *pCue;
+    IXACT3Wave *pWave;
+} XACT_NOTIFICATION_WAVE, *LPXACT_NOTIFICATION_WAVE;
+typedef const XACT_NOTIFICATION_WAVE *LPCXACT_NOTIFICATION_NAME;
+
+typedef struct XACT_NOTIFICATION
+{
+    XACTNOTIFICATIONTYPE type;
+    LONG timeStamp;
+    PVOID pvContext;
+    union
+    {
+        XACT_NOTIFICATION_CUE cue;
+        XACT_NOTIFICATION_MARKER marker;
+        XACT_NOTIFICATION_SOUNDBANK soundBank;
+        XACT_NOTIFICATION_WAVEBANK waveBank;
+        XACT_NOTIFICATION_VARIABLE variable;
+        XACT_NOTIFICATION_GUI gui;
+        XACT_NOTIFICATION_WAVE wave;
+    } DUMMYUNIONNAME;
+} XACT_NOTIFICATION, *LPXACT_NOTIFICATION;
+typedef const XACT_NOTIFICATION *LPCXACT_NOTIFICATION;
+
+typedef void (__stdcall *XACT_NOTIFICATION_CALLBACK)(
+    const XACT_NOTIFICATION *pNotification
+);
+
+typedef struct XACT_RUNTIME_PARAMETERS
+{
+    DWORD lookAheadTime;
+    void* pGlobalSettingsBuffer;
+    DWORD globalSettingsBufferSize;
+    DWORD globalSettingsFlags;
+    DWORD globalSettingsAllocAttributes;
+    XACT_FILEIO_CALLBACKS fileIOCallbacks;
+    XACT_NOTIFICATION_CALLBACK fnNotificationCallback;
+    LPCWSTR pRendererID;
+    IXAudio2 *pXAudio2;
+    IXAudio2MasteringVoice *pMasteringVoice;
+} XACT_RUNTIME_PARAMETERS, *LPXACT_RUNTIME_PARAMETERS;
+typedef const XACT_RUNTIME_PARAMETERS *LPCXACT_RUNTIME_PARAMETERS;
+
+#include <poppack.h>
+
+#define XACT_FLAG_ENGINE_CREATE_MANAGEDATA XACT_FLAG_MANAGEDATA
+#define XACT_FLAG_ENGINE_STOP_IMMEDIATE    XACT_FLAG_STOP_IMMEDIATE
+
+/*****************************************************************************
+ * IXACT3Engine interface
+ */
+#define INTERFACE IXACT3Engine
+DECLARE_INTERFACE_(IXACT3Engine,IUnknown)
+{
+    /*** IUnknown methods ***/
+    STDMETHOD_(HRESULT,QueryInterface)(THIS_ REFIID riid, void** ppvObject) PURE;
+    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
+    STDMETHOD_(ULONG,Release)(THIS) PURE;
+    /*** IXACT3Engine methods ***/
+    STDMETHOD(GetRendererCount)(THIS_ XACTINDEX *pnRendererCount) PURE;
+    STDMETHOD(GetRendererDetails)(THIS_ XACTINDEX nRendererIndex, LPXACT_RENDERER_DETAILS pRendererDetails) PURE;
+    STDMETHOD(GetFinalMixFormat)(THIS_ WAVEFORMATEXTENSIBLE *pFinalMixFormat) PURE;
+    STDMETHOD(Initialize)(THIS_ const XACT_RUNTIME_PARAMETERS *pParams) PURE;
+    STDMETHOD(Shutdown)(THIS) PURE;
+    STDMETHOD(DoWork)(THIS) PURE;
+    STDMETHOD(CreateSoundBank)(THIS_ const void *pvBuffer, DWORD dwSize, DWORD dwFlags, DWORD dwAllocAttributes, IXACT3SoundBank **ppSoundBank) PURE;
+    STDMETHOD(CreateInMemoryWaveBank)(THIS_ const void *pvBuffer, DWORD dwSize, DWORD dwFlags, DWORD dwAllocAttributes, IXACT3WaveBank **ppWaveBank) PURE;
+    STDMETHOD(CreateStreamingWaveBank)(THIS_ const XACT_WAVE_STREAMING_PARAMETERS *pParams, IXACT3WaveBank **ppWaveBank) PURE;
+    STDMETHOD(PrepareWave)(THIS_ DWORD dwFlags, PCSTR szWavePath, WORD wStreamingPacketSize, DWORD dwAlignment,
+                           DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
+    STDMETHOD(PrepareInMemoryWave)(THIS_ DWORD dwFlags, WAVEBANKENTRY entry, DWORD *pdwSeekTable, BYTE *pbWaveData,
+                           DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
+    STDMETHOD(PrepareStreamingWave)(THIS_ DWORD dwFlags, WAVEBANKENTRY entry, XACT_STREAMING_PARAMETERS streamingParams, DWORD dwAlignment, DWORD *pdwSeekTable,
+                           DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
+    STDMETHOD(RegisterNotification)(THIS_ const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc) PURE;
+    STDMETHOD(UnRegisterNotification)(THIS_ const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc) PURE;
+    STDMETHOD_(XACTCATEGORY,GetCategory)(THIS_ PCSTR szFriendlyName) PURE;
+    STDMETHOD(Stop)(THIS_ XACTCATEGORY nCategory, DWORD dwFlags) PURE;
+    STDMETHOD(SetVolume)(THIS_ XACTCATEGORY nCategory, XACTVOLUME nVolume) PURE;
+    STDMETHOD(Pause)(THIS_ XACTCATEGORY nCategory, BOOL fPause) PURE;
+    STDMETHOD_(XACTVARIABLEINDEX,GetGlobalVariableIndex)(THIS_ PCSTR szFriendlyName) PURE;
+    STDMETHOD(SetGlobalVariable)(THIS_ XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE nValue) PURE;
+    STDMETHOD(GetGlobalVariable)(THIS_ XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE *nValue) PURE;
+};
+#undef INTERFACE
+
+#if !defined(__cplusplus) || defined(CINTERFACE)
+/*** IUnknown methods ***/
+#define IXACT3Engine_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b)
+#define IXACT3Engine_AddRef(p)             (p)->lpVtbl->AddRef(p)
+#define IXACT3Engine_Release(p)            (p)->lpVtbl->Release(p)
+/*** IXACT3Engine methods ***/
+#define IXACT3Engine_GetRendererCount(p,a)         (p)->lpVtbl->GetRendererCount(p,a)
+#define IXACT3Engine_GetRendererDetails(p,a,b)     (p)->lpVtbl->GetRendererDetails(p,a,b)
+#define IXACT3Engine_GetFinalMixFormat(p,a)        (p)->lpVtbl->GetFinalMixFormat(p,a)
+#define IXACT3Engine_Initialize(p,a)               (p)->lpVtbl->Initialze(p,a)
+#define IXACT3Engine_Shutdown(p)                   (p)->lpVtbl->Shutdown(p)
+#define IXACT3Engine_DoWork(p)                     (p)->lpVtbl->DoWork(p)
+#define IXACT3Engine_CreateSoundBank(p,a,b,c,d,e)  (p)->lpVtbl->CreateSoundBank(p,a,b,c,d,e)
+#define IXACT3Engine_CreateInMemoryWaveBank(p,a,b,c,d,e) (p)->lpVtbl->CreateInMemoryWaveBank(p,a,b,c,d,e)
+#define IXACT3Engine_CreateStreamingWaveBank(p,a,b) (p)->lpVtbl->CreateStreamingWaveBank(p,a,b)
+#define IXACT3Engine_PrepareWave(p,a,b,c,d,e,f,g)  (p)->lpVtbl->PrepareWave(p,a,b,c,d,e,f,g)
+#define IXACT3Engine_PrepareInMemoryWave(p,a,b,c,d,e,f,g) (p)->lpVtbl->PrepareInMemoryWave(p,a,b,c,d,e,f,g)
+#define IXACT3Engine_PrepareStreamingWave(p,a,b,c,d,e,f,g,h) (p)->lpVtbl->PrepareStreamingWave(p,a,b,c,d,e,f,g,h)
+#define IXACT3Engine_RegisterNotification(p,a)     (p)->lpVtbl->RegisterNotification(p,a)
+#define IXACT3Engine_UnRegisterNotification(p,a)   (p)->lpVtbl->UnRegisterNotification(p,a)
+#define IXACT3Engine_GetCategory(p,a)              (p)->lpVtbl->GetCategory(p,a)
+#define IXACT3Engine_Stop(p,a,b)                   (p)->lpVtbl->Stop(a,b)
+#define IXACT3Engine_SetVolume(p,a,b)              (p)->lpVtbl->SetVolume(p,a,b)
+#define IXACT3Engine_Pause(p,a,b)                  (p)->lpVtbl->Pause(a,b)
+#define IXACT3Engine_GetGlobalVariableIndex(p,a)   (p)->lpVtbl->GetGlobalVariableIndex(p,a)
+#define IXACT3Engine_SetGlobalVariable(p,a,b)      (p)->lpVtbl->SetGlobalVariable(p,a,b)
+#define IXACT3Engine_GetGlobalVariable(p,a,b)      (p)->lpVtbl->GetGlobalVariable(p,a,b)
+#else
+/*** IUnknown methods ***/
+#define IXACT3Engine_QueryInterface(p,a,b) (p)->QueryInterface(a,b)
+#define IXACT3Engine_AddRef(p)             (p)->AddRef()
+#define IXACT3Engine_Release(p)            (p)->Release()
+/*** IXACT3Engine methods ***/
+#define IXACT3Engine_GetRendererCount(p,a)         (p)->GetRendererCount(a)
+#define IXACT3Engine_GetRendererDetails(p,a,b)     (p)->GetRendererDetails(a,b)
+#define IXACT3Engine_GetFinalMixFormat(p,a)        (p)->GetFinalMixFormat(a)
+#define IXACT3Engine_Initialize(p,a)               (p)->Initialize(a)
+#define IXACT3Engine_Shutdown(p)                   (p)->Shutdown()
+#define IXACT3Engine_DoWork(p)                     (p)->DoWork()
+#define IXACT3Engine_CreateSoundBank(p,a,b,c,d,e)  (p)->CreateSoundBank(a,b,c,d,e)
+#define IXACT3Engine_CreateInMemoryWaveBank(p,a,b,c,d,e) (p)->CreateInMemoryWaveBank(a,b,c,d,e)
+#define IXACT3Engine_CreateStreamingWaveBank(p,a,b) (p)->CreateStreamingWaveBank(a,b)
+#define IXACT3Engine_PrepareWave(p,a,b,c,d,e,f,g)  (p)->PrepareWave(a,b,c,d,e,f,g)
+#define IXACT3Engine_PrepareInMemoryWave(p,a,b,c,d,e,f,g) (p)->PrepareInMemoryWave(a,b,c,d,e,f,g)
+#define IXACT3Engine_PrepareStreamingWave(p,a,b,c,d,e,f,g,h) (p)->PrepareStreamingWave(a,b,c,d,e,f,g,h)
+#define IXACT3Engine_RegisterNotification(p,a)     (p)->RegisterNotification(a)
+#define IXACT3Engine_UnRegisterNotification(p,a)   (p)->UnRegisterNotification(a)
+#define IXACT3Engine_GetCategory(p,a)              (p)->GetCategory(a)
+#define IXACT3Engine_Stop(p,a,b)                   (p)->Stop(a,b)
+#define IXACT3Engine_SetVolume(p,a,b)              (p)->SetVolume(p,a,b)
+#define IXACT3Engine_Pause(p,a,b)                  (p)->Pause(a,b)
+#define IXACT3Engine_GetGlobalVariableIndex(p,a)   (p)->GetGlobalVariableIndex(a)
+#define IXACT3Engine_SetGlobalVariable(p,a,b)      (p)->SetGlobalVariable(a,b)
+#define IXACT3Engine_GetGlobalVariable(p,a,b)      (p)->GetGlobalVariable(a,b)
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __WINE_XACT3_H */
From 057eaf13851b256b756ff1ec9d01473dc5254775 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Wed, 1 Jul 2020 23:07:28 +0200
Subject: [PATCH] include: Add IXACT3Cue definition.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3.h | 114 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 114 insertions(+)

diff --git a/include/xact3.h b/include/xact3.h
index f8690775341..46f3bc467d6 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -206,6 +206,57 @@ typedef struct XACT_STREAMING_PARAMETERS
 typedef const XACT_STREAMING_PARAMETERS *LPCXACT_STREAMING_PARAMETERS;
 typedef const XACT_WAVE_STREAMING_PARAMETERS *LPCXACT_WAVE_STREAMING_PARAMETERS;
 
+typedef struct XACT_CUE_PROPERTIES
+{
+    char friendlyName[XACT_CUE_NAME_LENGTH];
+    BOOL interactive;
+    XACTINDEX iaVariableIndex;
+    XACTINDEX numVariations;
+    XACTINSTANCELIMIT maxInstances;
+    XACTINSTANCELIMIT currentInstances;
+} XACT_CUE_PROPERTIES, *LPXACT_CUE_PROPERTIES;
+
+typedef struct XACT_TRACK_PROPERTIES
+{
+    XACTTIME duration;
+    XACTINDEX numVariations;
+    XACTCHANNEL numChannels;
+    XACTINDEX waveVariation;
+    XACTLOOPCOUNT loopCount;
+} XACT_TRACK_PROPERTIES, *LPXACT_TRACK_PROPERTIES;
+
+typedef struct XACT_VARIATION_PROPERTIES
+{
+    XACTINDEX index;
+    XACTVARIATIONWEIGHT weight;
+    XACTVARIABLEVALUE iaVariableMin;
+    XACTVARIABLEVALUE iaVariableMax;
+    BOOL linger;
+} XACT_VARIATION_PROPERTIES, *LPXACT_VARIATION_PROPERTIES;
+
+typedef struct XACT_SOUND_PROPERTIES
+{
+    XACTCATEGORY category;
+    BYTE priority;
+    XACTPITCH pitch;
+    XACTVOLUME volume;
+    XACTINDEX numTracks;
+    XACT_TRACK_PROPERTIES arrTrackProperties[1];
+} XACT_SOUND_PROPERTIES, *LPXACT_SOUND_PROPERTIES;
+
+typedef struct XACT_SOUND_VARIATION_PROPERTIES
+{
+    XACT_VARIATION_PROPERTIES variationProperties;
+    XACT_SOUND_PROPERTIES soundProperties;
+} XACT_SOUND_VARIATION_PROPERTIES, *LPXACT_SOUND_VARIATION_PROPERTIES;
+
+typedef struct XACT_CUE_INSTANCE_PROPERTIES
+{
+    DWORD allocAttributes;
+    XACT_CUE_PROPERTIES cueProperties;
+    XACT_SOUND_VARIATION_PROPERTIES activeVariationProperties;
+} XACT_CUE_INSTANCE_PROPERTIES, *LPXACT_CUE_INSTANCE_PROPERTIES;
+
 typedef struct XACTCHANNELMAPENTRY
 {
     XACTCHANNEL InputChannel;
@@ -368,6 +419,69 @@ typedef const XACT_RUNTIME_PARAMETERS *LPCXACT_RUNTIME_PARAMETERS;
 
 #include <poppack.h>
 
+#define XACT_FLAG_CUE_STOP_RELEASE   XACT_FLAG_STOP_RELEASE
+#define XACT_FLAG_CUE_STOP_IMMEDIATE XACT_FLAG_STOP_IMMEDIATE
+
+#define XACT_CUESTATE_CREATED   XACT_STATE_CREATED
+#define XACT_CUESTATE_PREPARING XACT_STATE_PREPARING
+#define XACT_CUESTATE_PREPARED  XACT_STATE_PREPARED
+#define XACT_CUESTATE_PLAYING   XACT_STATE_PLAYING
+#define XACT_CUESTATE_STOPPING  XACT_STATE_STOPPING
+#define XACT_CUESTATE_STOPPED   XACT_STATE_STOPPED
+#define XACT_CUESTATE_PAUSED    XACT_STATE_PAUSED
+
+/*****************************************************************************
+ * IXACT3Cue interface
+ */
+#define INTERFACE IXACT3Cue
+DECLARE_INTERFACE(IXACT3Cue)
+{
+    /*** IXACT3Cue methods ***/
+    STDMETHOD(Play)(THIS) PURE;
+    STDMETHOD(Stop)(THIS_ DWORD pdwFlags) PURE;
+    STDMETHOD(GetState)(THIS_ DWORD *pdwState) PURE;
+    STDMETHOD(Destroy)(THIS) PURE;
+    STDMETHOD(SetMatrixCoefficients)(THIS_ UINT32 uSrcChannelCount, UINT32 uDstChannelCount, float *pMatrixCoefficients) PURE;
+    STDMETHOD_(XACTVARIABLEINDEX,GetVariableIndex)(THIS_ PCSTR szFriendlyName) PURE;
+    STDMETHOD(SetVariable)(THIS_ XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE nValue) PURE;
+    STDMETHOD(GetVariable)(THIS_ XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE *nValue) PURE;
+    STDMETHOD(Pause)(THIS_ BOOL fPause) PURE;
+    STDMETHOD(GetProperties)(THIS_ LPXACT_CUE_INSTANCE_PROPERTIES *ppProperties) PURE;
+    STDMETHOD(SetOutputVoices)(THIS_ const XAUDIO2_VOICE_SENDS *pSendList) PURE;
+    STDMETHOD(SetOutputVoiceMatrix)(THIS_ IXAudio2Voice *pDestinationVoice, UINT32 SourceChannels, UINT32 DestinationChannels, const float *pLevelMatrix) PURE;
+};
+#undef INTERFACE
+
+#if !defined(__cplusplus) || defined(CINTERFACE)
+/*** IXACT3Cue methods ***/
+#define IXACT3Cue_Play(p)               (p)->lpVtbl->Destroy(p)
+#define IXACT3Cue_Stop(p,a)             (p)->lpVtbl->Stop(p,a)
+#define IXACT3Cue_GetState(p,a)         (p)->lpVtbl->GetState(p,a)
+#define IXACT3Cue_Destroy(p)            (p)->lpVtbl->Destroy(p)
+#define IXACT3Cue_SetMatrixCoefficients(p,a,b,c) (p)->lpVtbl->SetMatrixCoefficients(p,a,b,c)
+#define IXACT3Cue_GetVariableIndex(p,a) (p)->lpVtbl->GetVariableIndex(p,a)
+#define IXACT3Cue_SetVariable(p,a,b)    (p)->lpVtbl->SetVariable(p,a,b)
+#define IXACT3Cue_GetVariable(p,a,b)    (p)->lpVtbl->GetVariable(p,a,b)
+#define IXACT3Cue_Pause(p,a)            (p)->lpVtbl->Pause(p,a)
+#define IXACT3Cue_GetProperties(p,a)    (p)->lpVtbl->GetProperties(p,a)
+#define IXACT3Cue_SetOutputVoices(p,a)  (p)->lpVtbl->SetOutputVoices(p,a)
+#define IXACT3Cue_SetOutputVoiceMatrix(p,a,b,c,d) (p)->lpVtbl->SetOutputVoiceMatrix(p,a,b,c,d)
+#else
+/*** IXACT3Cue methods ***/
+#define IXACT3Cue_Play(p)               (p)->Destroy()
+#define IXACT3Cue_Stop(p,a)             (p)->Stop(a)
+#define IXACT3Cue_GetState(p,a)         (p)->Stop(a)
+#define IXACT3Cue_Destroy(p)            (p)->Destroy()
+#define IXACT3Cue_SetMatrixCoefficients(p,a,b,c) (p)->SetMatrixCoefficients(a,b,c)
+#define IXACT3Cue_GetVariableIndex(p,a) (p)->GetVariableIndex(a)
+#define IXACT3Cue_SetVariable(p,a,b)    (p)->SetVariable(a,b)
+#define IXACT3Cue_GetVariable(p,a,b)    (p)->GetVariable(a,b)
+#define IXACT3Cue_Pause(p,a)            (p)->Pause(a)
+#define IXACT3Cue_GetProperties(p,a)    (p)->GetProperties(a)
+#define IXACT3Cue_SetOutputVoices(p,a)  (p)->SetOutputVoices(a)
+#define IXACT3Cue_SetOutputVoiceMatrix(p,a,b,c,d) (p)->SetOutputVoiceMatrix(a,b,c,d)
+#endif
+
 #define XACT_FLAG_ENGINE_CREATE_MANAGEDATA XACT_FLAG_MANAGEDATA
 #define XACT_FLAG_ENGINE_STOP_IMMEDIATE    XACT_FLAG_STOP_IMMEDIATE
 
From b4a59b3ffc2c4123a68a0cbc5a7802b02c9d8e8d Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Wed, 1 Jul 2020 23:14:50 +0200
Subject: [PATCH] include: Add IXACT3Wave definition.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3.h | 60 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

diff --git a/include/xact3.h b/include/xact3.h
index 46f3bc467d6..8b9c3967cfa 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -331,6 +331,23 @@ typedef struct XACT_NOTIFICATION_CUE
 } XACT_NOTIFICATION_CUE, *LPXACT_NOTIFICATION_CUE;
 typedef const XACT_NOTIFICATION_CUE *LPCXACT_NOTIFICATION_CUE;
 
+typedef struct XACT_WAVE_PROPERTIES
+{
+    char friendlyName[WAVEBANK_ENTRYNAME_LENGTH];
+    WAVEBANKMINIWAVEFORMAT format;
+    DWORD durationInSamples;
+    WAVEBANKSAMPLEREGION loopRegion;
+    BOOL streaming;
+} XACT_WAVE_PROPERTIES, *LPXACT_WAVE_PROPERTIES;
+typedef const XACT_WAVE_PROPERTIES *LPCXACT_WAVE_PROPERTIES;
+
+typedef struct XACT_WAVE_INSTANCE_PROPERTIES
+{
+    XACT_WAVE_PROPERTIES properties;
+    BOOL backgroundMusic;
+} XACT_WAVE_INSTANCE_PROPERTIES, *LPXACT_WAVE_INSTANCE_PROPERTIES;
+typedef const XACT_WAVE_INSTANCE_PROPERTIES *LPCXACT_WAVE_INSTANCE_PROPERTIES;
+
 typedef struct XACT_NOTIFICATION_MARKER
 {
     XACTINDEX cueIndex;
@@ -482,6 +499,49 @@ DECLARE_INTERFACE(IXACT3Cue)
 #define IXACT3Cue_SetOutputVoiceMatrix(p,a,b,c,d) (p)->SetOutputVoiceMatrix(a,b,c,d)
 #endif
 
+/*****************************************************************************
+ * IXACT3Wave interface
+ */
+#define INTERFACE IXACT3Wave
+DECLARE_INTERFACE(IXACT3Wave)
+{
+    /*** IXACT3Wave methods ***/
+    STDMETHOD(Destroy)(THIS) PURE;
+    STDMETHOD(Play)(THIS) PURE;
+    STDMETHOD(Stop)(THIS_ DWORD pdwFlags) PURE;
+    STDMETHOD(Pause)(THIS_ BOOL fPause) PURE;
+    STDMETHOD(GetState)(THIS_ DWORD *pdwState) PURE;
+    STDMETHOD(SetPitch)(THIS_ XACTPITCH pitch) PURE;
+    STDMETHOD(SetVolume)(THIS_ XACTVOLUME volume) PURE;
+    STDMETHOD(SetMatrixCoefficients)(THIS_ UINT32 uSrcChannelCount, UINT32 uDstChannelCount, float *pMatrixCoefficients) PURE;
+    STDMETHOD(GetProperties)(THIS_ LPXACT_WAVE_INSTANCE_PROPERTIES pProperties) PURE;
+};
+#undef INTERFACE
+
+#if !defined(__cplusplus) || defined(CINTERFACE)
+/*** IXACT3Wave methods ***/
+#define IXACT3Wave_Destroy(p)            (p)->lpVtbl->Destroy(p)
+#define IXACT3Wave_Play(p)               (p)->lpVtbl->Destroy(p)
+#define IXACT3Wave_Stop(p,a)             (p)->lpVtbl->Stop(p,a)
+#define IXACT3Wave_Pause(p,a)            (p)->lpVtbl->Pause(p,a)
+#define IXACT3Wave_GetState(p,a)         (p)->lpVtbl->GetState(p,a)
+#define IXACT3Wave_SetPitch(p,a)         (p)->lpVtbl->SetPitch(p,a)
+#define IXACT3Wave_SetVolume(p,a)        (p)->lpVtbl->SetVolume(p,a)
+#define IXACT3Wave_SetMatrixCoefficients(p,a,b,c) (p)->lpVtbl->SetMatrixCoefficients(p,a,b,c)
+#define IXACT3Wave_GetProperties(p,a)    (p)->lpVtbl->GetProperties(p,a)
+#else
+/*** IXACT3Wave methods ***/
+#define IXACT3Wave_Destroy(p)            (p)->Destroy()
+#define IXACT3Wave_Play(p)               (p)->Destroy()
+#define IXACT3Wave_Stop(p,a)             (p)->Stop(a)
+#define IXACT3Wave_Pause(p,a)            (p)->Pause(a)
+#define IXACT3Wave_GetState(p,a)         (p)->Stop(a)
+#define IXACT3Wave_SetPitch(p,a)         (p)->SetVariable(a)
+#define IXACT3Wave_SetVolume(p,a)        (p)->SetVolume(a)
+#define IXACT3Wave_SetMatrixCoefficients(p,a,b,c) (p)->SetMatrixCoefficients(a,b,c)
+#define IXACT3Wave_GetProperties(p,a)    (p)->GetProperties(a)
+#endif
+
 #define XACT_FLAG_ENGINE_CREATE_MANAGEDATA XACT_FLAG_MANAGEDATA
 #define XACT_FLAG_ENGINE_STOP_IMMEDIATE    XACT_FLAG_STOP_IMMEDIATE
 
From 56f3ca3f767c2cd6a22139c393fd5051be588a71 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Wed, 1 Jul 2020 23:19:03 +0200
Subject: [PATCH] include: Add IXACT3SoundBank definition.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3.h | 43 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

diff --git a/include/xact3.h b/include/xact3.h
index 8b9c3967cfa..cdb91d145d0 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -542,6 +542,49 @@ DECLARE_INTERFACE(IXACT3Wave)
 #define IXACT3Wave_GetProperties(p,a)    (p)->GetProperties(a)
 #endif
 
+#define XACT_FLAG_SOUNDBANK_STOP_IMMEDIATE XACT_FLAG_STOP_IMMEDIATE
+#define XACT_SOUNDBANKSTATE_INUSE          XACT_STATE_INUSE
+
+/*****************************************************************************
+ * IXACT3SoundBank interface
+ */
+#define INTERFACE IXACT3SoundBank
+DECLARE_INTERFACE(IXACT3SoundBank)
+{
+    /*** IXACT3SoundBank methods ***/
+    STDMETHOD_(XACTINDEX,GetCueIndex)(THIS_ PCSTR szFriendlyName) PURE;
+    STDMETHOD(GetNumCues)(THIS_ XACTINDEX *pnNumCues) PURE;
+    STDMETHOD(GetCueProperties)(THIS_ XACTINDEX nCueIndex, LPXACT_CUE_PROPERTIES pProperties) PURE;
+    STDMETHOD(Prepare)(THIS_ XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset, IXACT3Cue **ppCue) PURE;
+    STDMETHOD(Play)(THIS_ XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset, IXACT3Cue **ppCue) PURE;
+    STDMETHOD(Stop)(THIS_ XACTINDEX nCueIndex, DWORD dwFlags) PURE;
+    STDMETHOD(Destroy)(THIS) PURE;
+    STDMETHOD(GetState)(THIS_ DWORD *pdwState) PURE;
+};
+#undef INTERFACE
+
+#if !defined(__cplusplus) || defined(CINTERFACE)
+/*** IXACT3SoundBank methods ***/
+#define IXACT3SoundBank_GetCueIndex(p,a)   (p)->lpVtbl->GetCueIndex(p,a)
+#define IXACT3SoundBank_GetNumCues(p,a)    (p)->lpVtbl->GetNumCues(p,a)
+#define IXACT3SoundBank_GetCueProperties(p,a,b) (p)->lpVtbl->GetCueProperties(p,a,b)
+#define IXACT3SoundBank_Prepare(p,a,b,c,d) (p)->lpVtbl->Prepare(p,a,b,c,d)
+#define IXACT3SoundBank_Play(p,a,b,c,d)    (p)->lpVtbl->Play(p,a,b,c,d)
+#define IXACT3SoundBank_Stop(p,a,b)        (p)->lpVtbl->Stop(p,a,b)
+#define IXACT3SoundBank_Destroy(p)         (p)->lpVtbl->Destroy(p)
+#define IXACT3SoundBank_GetState(p,a)      (p)->lpVtbl->GetState(p,a)
+#else
+/*** IXACT3SoundBank methods ***/
+#define IXACT3SoundBank_GetCueIndex(p,a)   (p)->GetCueIndex(a)
+#define IXACT3SoundBank_GetNumCues(p,a)    (p)->GetNumCues(a)
+#define IXACT3SoundBank_GetCueProperties(p,a,b) (p)->GetCueProperties(a,b)
+#define IXACT3SoundBank_Prepare(p,a,b,c,d) (p)->Prepare(a,b,c,d)
+#define IXACT3SoundBank_Play(p,a,b,c,d)    (p)->Play(a,b,c,d)
+#define IXACT3SoundBank_Stop(p,a,b)        (p)->Stop(a,b)
+#define IXACT3SoundBank_Destroy(p)         (p)->Destroy()
+#define IXACT3SoundBank_GetState(p,a)      (p)->GetState(a)
+#endif
+
 #define XACT_FLAG_ENGINE_CREATE_MANAGEDATA XACT_FLAG_MANAGEDATA
 #define XACT_FLAG_ENGINE_STOP_IMMEDIATE    XACT_FLAG_STOP_IMMEDIATE
 
From b1d78184f0746732126c5e2ae7a2c14d2644b247 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Wed, 1 Jul 2020 23:26:19 +0200
Subject: [PATCH] include: Add IXACT3WaveBank definition.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3.h | 44 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/include/xact3.h b/include/xact3.h
index cdb91d145d0..d66874a511d 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -585,6 +585,50 @@ DECLARE_INTERFACE(IXACT3SoundBank)
 #define IXACT3SoundBank_GetState(p,a)      (p)->GetState(a)
 #endif
 
+#define XACT_WAVEBANKSTATE_INUSE         XACT_STATE_INUSE
+#define XACT_WAVEBANKSTATE_PREPARED      XACT_STATE_PREPARED
+#define XACT_WAVEBANKSTATE_PREPAREFAILED XACT_STATE_PREPAREFAILED
+
+/*****************************************************************************
+ * IXACT3WaveBank interface
+ */
+#define INTERFACE IXACT3WaveBank
+DECLARE_INTERFACE(IXACT3WaveBank)
+{
+    /*** IXACT3WaveBank methods ***/
+    STDMETHOD(Destroy)(THIS) PURE;
+    STDMETHOD(GetNumWaves)(THIS_ XACTINDEX *pnNumWaves) PURE;
+    STDMETHOD_(XACTINDEX,GetWaveIndex)(THIS_ PCSTR szFriendlyName) PURE;
+    STDMETHOD(GetWaveProperties)(THIS_ XACTINDEX nWaveIndex, LPXACT_WAVE_PROPERTIES pWaveProperties) PURE;
+    STDMETHOD(Prepare)(THIS_ XACTINDEX nWaveIndex, DWORD dwFlags, DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
+    STDMETHOD(Play)(THIS_ XACTINDEX nWaveIndex, DWORD dwFlags, DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
+    STDMETHOD(Stop)(THIS_ XACTINDEX nWaveIndex, DWORD dwFlags) PURE;
+    STDMETHOD(GetState)(THIS_ DWORD *pdwState) PURE;
+};
+#undef INTERFACE
+
+#if !defined(__cplusplus) || defined(CINTERFACE)
+/*** IXACT3WaveBank methods ***/
+#define IXACT3WaveBank_Destroy(p)          (p)->lpVtbl->Destroy(p)
+#define IXACT3WaveBank_GetNumWaves(p,a)    (p)->lpVtbl->GetNumCues(p,a)
+#define IXACT3WaveBank_GetWaveIndex(p,a)   (p)->lpVtbl->GetWaveIndex(p,a)
+#define IXACT3WaveBank_GetWaveProperties(p,a,b) (p)->lpVtbl->GetWaveProperties(p,a,b)
+#define IXACT3WaveBank_Prepare(p,a,b,c,d,e)     (p)->lpVtbl->Prepare(p,a,b,c,d,e)
+#define IXACT3WaveBank_Play(p,a,b,c,d,e)   (p)->lpVtbl->Play(p,a,b,c,d,e)
+#define IXACT3WaveBank_Stop(p,a,b)         (p)->lpVtbl->Stop(p,a,b)
+#define IXACT3WaveBank_GetState(p,a)       (p)->lpVtbl->GetState(p,a)
+#else
+/*** IXACT3WaveBank methods ***/
+#define IXACT3WaveBank_Destroy(p)          (p)->Destroy()
+#define IXACT3WaveBank_GetNumWaves(p,a)    (p)->GetNumWaves(a)
+#define IXACT3WaveBank_GetWaveIndex(p,a)   (p)->GetWaveIndex(a)
+#define IXACT3WaveBank_GetWaveProperties(p,a,b) (p)->GetWaveProperties(a,b)
+#define IXACT3WaveBank_Prepare(p,a,b,c,d,e)     (p)->Prepare(a,b,c,d,e)
+#define IXACT3WaveBank_Play(p,a,b,c,d,e)  (p)->Play(a,b,c,d,e)
+#define IXACT3WaveBank_Stop(p,a,b)        (p)->Stop(a,b)
+#define IXACT3WaveBank_GetState(p,a)      (p)->GetState(a)
+#endif
+
 #define XACT_FLAG_ENGINE_CREATE_MANAGEDATA XACT_FLAG_MANAGEDATA
 #define XACT_FLAG_ENGINE_STOP_IMMEDIATE    XACT_FLAG_STOP_IMMEDIATE
 
From 255bae60464554d3611b163813a57639843c92ca Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 13 Jun 2020 22:44:23 +0200
Subject: [PATCH] xactengine3_7: Add new dll.

Based on original patch from Ethan Lee

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  2 +
 configure.ac                          |  1 +
 dlls/xactengine3_7/Makefile.in        |  6 +++
 dlls/xactengine3_7/xact_classes.idl   | 28 ++++++++++++
 dlls/xactengine3_7/xact_dll.c         | 66 +++++++++++++++++++++++++++
 dlls/xactengine3_7/xactengine3_7.spec |  4 ++
 6 files changed, 107 insertions(+)
 create mode 100644 dlls/xactengine3_7/Makefile.in
 create mode 100644 dlls/xactengine3_7/xact_classes.idl
 create mode 100644 dlls/xactengine3_7/xact_dll.c
 create mode 100644 dlls/xactengine3_7/xactengine3_7.spec

diff --git a/configure b/configure
index f4e188f38ed..166c260a6ec 100755
--- a/configure
+++ b/configure
@@ -1704,6 +1704,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_7
 enable_xapofx1_1
 enable_xapofx1_2
 enable_xapofx1_3
@@ -21329,6 +21330,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_7 enable_xactengine3_7
 wine_fn_config_makefile dlls/xapofx1_1 enable_xapofx1_1
 wine_fn_config_makefile dlls/xapofx1_2 enable_xapofx1_2
 wine_fn_config_makefile dlls/xapofx1_3 enable_xapofx1_3
diff --git a/configure.ac b/configure.ac
index c0a44f37122..6f5aa8da200 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3895,6 +3895,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_7)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_1)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_2)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_3)
diff --git a/dlls/xactengine3_7/Makefile.in b/dlls/xactengine3_7/Makefile.in
new file mode 100644
index 00000000000..f92aad6680e
--- /dev/null
+++ b/dlls/xactengine3_7/Makefile.in
@@ -0,0 +1,6 @@
+MODULE    = xactengine3_7.dll
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
new file mode 100644
index 00000000000..24c792e2f05
--- /dev/null
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -0,0 +1,28 @@
+/*
+ * COM Classes for xactengine
+ *
+ * Copyright 2018 Ethan Lee for CodeWeavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#pragma makedep register
+
+[
+    helpstring("XACT3 Class"),
+    threading(both),
+    uuid(bcc782bc-6492-4c22-8c35-f5d72fe73c6e)
+]
+coclass XACTEngine37 { interface IXACT37Engine; }
diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
new file mode 100644
index 00000000000..ffabc3829f4
--- /dev/null
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2018 Ethan Lee for CodeWeavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#include "config.h"
+
+#include <stdarg.h>
+
+#include "xact3.h"
+#include "rpcproxy.h"
+#include "xact_classes.h"
+#include "wine/debug.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(xact3);
+
+static HINSTANCE instance;
+
+BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD reason, void *pReserved)
+{
+    TRACE("(%p, %d, %p)\n", hinstDLL, reason, pReserved);
+
+    switch (reason)
+    {
+    case DLL_PROCESS_ATTACH:
+        instance = hinstDLL;
+        DisableThreadLibraryCalls( hinstDLL );
+        break;
+    }
+    return TRUE;
+}
+
+HRESULT WINAPI DllCanUnloadNow(void)
+{
+    return S_FALSE;
+}
+
+HRESULT WINAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, void **ppv)
+{
+    FIXME("(%s, %s, %p)\n", debugstr_guid(rclsid), debugstr_guid(riid), ppv);
+
+    return CLASS_E_CLASSNOTAVAILABLE;
+}
+
+HRESULT WINAPI DllRegisterServer(void)
+{
+    return __wine_register_resources(instance);
+}
+
+HRESULT WINAPI DllUnregisterServer(void)
+{
+    return __wine_unregister_resources(instance);
+}
diff --git a/dlls/xactengine3_7/xactengine3_7.spec b/dlls/xactengine3_7/xactengine3_7.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_7/xactengine3_7.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
From 124cd264fa258354383d9a5d6dd995d8f7868e4b Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Thu, 2 Jul 2020 09:27:39 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3Engine interface.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                      |   1 +
 configure.ac                   |   1 +
 dlls/xactengine3_7/Makefile.in |   3 +
 dlls/xactengine3_7/xact_dll.c  | 463 ++++++++++++++++++++++++++++++++-
 4 files changed, 467 insertions(+), 1 deletion(-)

diff --git a/configure b/configure
index 166c260a6ec..bed9eab3673 100755
--- a/configure
+++ b/configure
@@ -16630,6 +16630,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
     enable_xapofx1_2=${enable_xapofx1_2:-no}
     enable_xapofx1_3=${enable_xapofx1_3:-no}
diff --git a/configure.ac b/configure.ac
index 6f5aa8da200..29ff38f169b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
     enable_xapofx1_2=${enable_xapofx1_2:-no}
     enable_xapofx1_3=${enable_xapofx1_3:-no}
diff --git a/dlls/xactengine3_7/Makefile.in b/dlls/xactengine3_7/Makefile.in
index f92aad6680e..6fce27d1628 100644
--- a/dlls/xactengine3_7/Makefile.in
+++ b/dlls/xactengine3_7/Makefile.in
@@ -1,4 +1,7 @@
 MODULE    = xactengine3_7.dll
+IMPORTS   = ole32 uuid
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
 
 C_SRCS = \
 	xact_dll.c
diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index ffabc3829f4..3a14db74608 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -19,7 +19,12 @@
 #include "config.h"
 
 #include <stdarg.h>
+#include <FACT.h>
 
+#define NONAMELESSUNION
+#define COBJMACROS
+
+#include "initguid.h"
 #include "xact3.h"
 #include "rpcproxy.h"
 #include "xact_classes.h"
@@ -29,6 +34,457 @@ WINE_DEFAULT_DEBUG_CHANNEL(xact3);
 
 static HINSTANCE instance;
 
+typedef struct _XACT3EngineImpl {
+    IXACT3Engine IXACT3Engine_iface;
+
+    FACTAudioEngine *fact_engine;
+
+    XACT_READFILE_CALLBACK pReadFile;
+    XACT_GETOVERLAPPEDRESULT_CALLBACK pGetOverlappedResult;
+} XACT3EngineImpl;
+
+typedef struct wrap_readfile_struct {
+    XACT3EngineImpl *engine;
+    HANDLE file;
+} wrap_readfile_struct;
+
+static int32_t FACTCALL wrap_readfile(
+    void* hFile,
+    void* lpBuffer,
+    uint32_t nNumberOfBytesRead,
+    uint32_t *lpNumberOfBytesRead,
+    FACTOverlapped *lpOverlapped)
+{
+    wrap_readfile_struct *wrap = (wrap_readfile_struct*) hFile;
+    return wrap->engine->pReadFile(wrap->file, lpBuffer, nNumberOfBytesRead,
+            lpNumberOfBytesRead, (LPOVERLAPPED)lpOverlapped);
+}
+
+static int32_t FACTCALL wrap_getoverlappedresult(
+    void* hFile,
+    FACTOverlapped *lpOverlapped,
+    uint32_t *lpNumberOfBytesTransferred,
+    int32_t bWait)
+{
+    wrap_readfile_struct *wrap = (wrap_readfile_struct*) hFile;
+    return wrap->engine->pGetOverlappedResult(wrap->file, (LPOVERLAPPED)lpOverlapped,
+            lpNumberOfBytesTransferred, bWait);
+}
+
+static inline XACT3EngineImpl *impl_from_IXACT3Engine(IXACT3Engine *iface)
+{
+    return CONTAINING_RECORD(iface, XACT3EngineImpl, IXACT3Engine_iface);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_QueryInterface(IXACT3Engine *iface,
+        REFIID riid, void **ppvObject)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%s, %p)\n", This, debugstr_guid(riid), ppvObject);
+
+    if(IsEqualGUID(riid, &IID_IUnknown) ||
+            IsEqualGUID(riid, &IID_IXACT3Engine)){
+        *ppvObject = &This->IXACT3Engine_iface;
+    }
+    else
+        *ppvObject = NULL;
+
+    if (*ppvObject){
+        IUnknown_AddRef((IUnknown*)*ppvObject);
+        return S_OK;
+    }
+
+    FIXME("(%p)->(%s,%p), not found\n", This, debugstr_guid(riid), ppvObject);
+
+    return E_NOINTERFACE;
+}
+
+static ULONG WINAPI IXACT3EngineImpl_AddRef(IXACT3Engine *iface)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    ULONG ref = FACTAudioEngine_AddRef(This->fact_engine);
+    TRACE("(%p)->(): Refcount now %u\n", This, ref);
+    return ref;
+}
+
+static ULONG WINAPI IXACT3EngineImpl_Release(IXACT3Engine *iface)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    ULONG ref = FACTAudioEngine_Release(This->fact_engine);
+
+    TRACE("(%p)->(): Refcount now %u\n", This, ref);
+
+    if (!ref)
+        HeapFree(GetProcessHeap(), 0, This);
+    return ref;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_GetRendererCount(IXACT3Engine *iface,
+        XACTINDEX *pnRendererCount)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%p)\n", This, pnRendererCount);
+
+    return FACTAudioEngine_GetRendererCount(This->fact_engine, pnRendererCount);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_GetRendererDetails(IXACT3Engine *iface,
+        XACTINDEX nRendererIndex, XACT_RENDERER_DETAILS *pRendererDetails)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%d, %p)\n", This, nRendererIndex, pRendererDetails);
+
+    return FACTAudioEngine_GetRendererDetails(This->fact_engine,
+            nRendererIndex, (FACTRendererDetails*) pRendererDetails);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_GetFinalMixFormat(IXACT3Engine *iface,
+        WAVEFORMATEXTENSIBLE *pFinalMixFormat)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%p)\n", This, pFinalMixFormat);
+
+    return FACTAudioEngine_GetFinalMixFormat(This->fact_engine,
+            (FAudioWaveFormatExtensible*) pFinalMixFormat);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
+        const XACT_RUNTIME_PARAMETERS *pParams)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FACTRuntimeParameters params;
+
+    TRACE("(%p)->(%p)\n", This, pParams);
+
+    memcpy(&params, pParams, sizeof(FACTRuntimeParameters));
+
+    /* FIXME: pXAudio2 and pMasteringVoice are pointers to
+     * IXAudio2/IXAudio2MasteringVoice objects. FACT wants pointers to
+     * FAudio/FAudioMasteringVoice objects. In Wine's XAudio2 implementation, we
+     * actually have them available, but only if you access their internal data.
+     * For now we can just force these pointers to NULL, as XACT simply
+     * generates its own engine and endpoint in that situation. These parameters
+     * are mostly an optimization for games with multiple XACT3Engines that want
+     * a single engine running everything.
+     * -flibit
+     */
+    if (pParams->pXAudio2 != NULL){
+        FIXME("pXAudio2 parameter not supported! Falling back to NULL\n");
+        params.pXAudio2 = NULL;
+
+        if (pParams->pMasteringVoice != NULL){
+            FIXME("pXAudio2 parameter not supported! Falling back to NULL\n");
+            params.pMasteringVoice = NULL;
+        }
+    }
+
+    /* Force Windows I/O, do NOT use the FACT default! */
+    This->pReadFile = (XACT_READFILE_CALLBACK)
+            pParams->fileIOCallbacks.readFileCallback;
+    This->pGetOverlappedResult = (XACT_GETOVERLAPPEDRESULT_CALLBACK)
+            pParams->fileIOCallbacks.getOverlappedResultCallback;
+    if (This->pReadFile == NULL)
+        This->pReadFile = (XACT_READFILE_CALLBACK) ReadFile;
+    if (This->pGetOverlappedResult == NULL)
+        This->pGetOverlappedResult = (XACT_GETOVERLAPPEDRESULT_CALLBACK)
+                GetOverlappedResult;
+    params.fileIOCallbacks.readFileCallback = wrap_readfile;
+    params.fileIOCallbacks.getOverlappedResultCallback = wrap_getoverlappedresult;
+
+    return FACTAudioEngine_Initialize(This->fact_engine, &params);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_ShutDown(IXACT3Engine *iface)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)\n", This);
+
+    return FACTAudioEngine_ShutDown(This->fact_engine);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_DoWork(IXACT3Engine *iface)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)\n", This);
+
+    return FACTAudioEngine_DoWork(This->fact_engine);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_CreateSoundBank(IXACT3Engine *iface,
+        const void* pvBuffer, DWORD dwSize, DWORD dwFlags,
+        DWORD dwAllocAttributes, IXACT3SoundBank **ppSoundBank)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
+            dwAllocAttributes, ppSoundBank);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *iface,
+        const void* pvBuffer, DWORD dwSize, DWORD dwFlags,
+        DWORD dwAllocAttributes, IXACT3WaveBank **ppWaveBank)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
+            dwAllocAttributes, ppWaveBank);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *iface,
+        const XACT_STREAMING_PARAMETERS *pParms,
+        IXACT3WaveBank **ppWaveBank)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p)->(%p, %p): stub!\n", This, pParms, ppWaveBank);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_PrepareInMemoryWave(IXACT3Engine *iface,
+        DWORD dwFlags, WAVEBANKENTRY entry, DWORD *pdwSeekTable,
+        BYTE *pbWaveData, DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount,
+        IXACT3Wave **ppWave)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p): stub!\n", This);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_PrepareStreamingWave(IXACT3Engine *iface,
+        DWORD dwFlags, WAVEBANKENTRY entry,
+        XACT_STREAMING_PARAMETERS streamingParams, DWORD dwAlignment,
+        DWORD *pdwSeekTable, DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount,
+        IXACT3Wave **ppWave)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p): stub!\n", This);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_PrepareWave(IXACT3Engine *iface,
+        DWORD dwFlags, PCSTR szWavePath, WORD wStreamingPacketSize,
+        DWORD dwAlignment, DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount,
+        IXACT3Wave **ppWave)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FIXME("(%p): stub!\n", This);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_RegisterNotification(IXACT3Engine *iface,
+        const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_UnRegisterNotification(IXACT3Engine *iface,
+        const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
+    return E_NOTIMPL;
+}
+
+static XACTCATEGORY WINAPI IXACT3EngineImpl_GetCategory(IXACT3Engine *iface,
+        PCSTR szFriendlyName)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%s)\n", This, szFriendlyName);
+
+    return FACTAudioEngine_GetCategory(This->fact_engine, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_Stop(IXACT3Engine *iface,
+        XACTCATEGORY nCategory, DWORD dwFlags)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%u, 0x%x)\n", This, nCategory, dwFlags);
+
+    return FACTAudioEngine_Stop(This->fact_engine, nCategory, dwFlags);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_SetVolume(IXACT3Engine *iface,
+        XACTCATEGORY nCategory, XACTVOLUME nVolume)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%u, %f)\n", This, nCategory, nVolume);
+
+    return FACTAudioEngine_SetVolume(This->fact_engine, nCategory, nVolume);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_Pause(IXACT3Engine *iface,
+        XACTCATEGORY nCategory, BOOL fPause)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%u, %u)\n", This, nCategory, fPause);
+
+    return FACTAudioEngine_Pause(This->fact_engine, nCategory, fPause);
+}
+
+static XACTVARIABLEINDEX WINAPI IXACT3EngineImpl_GetGlobalVariableIndex(
+        IXACT3Engine *iface, PCSTR szFriendlyName)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%s)\n", This, szFriendlyName);
+
+    return FACTAudioEngine_GetGlobalVariableIndex(This->fact_engine,
+            szFriendlyName);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_SetGlobalVariable(IXACT3Engine *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE nValue)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%u, %f)\n", This, nIndex, nValue);
+
+    return FACTAudioEngine_SetGlobalVariable(This->fact_engine, nIndex, nValue);
+}
+
+static HRESULT WINAPI IXACT3EngineImpl_GetGlobalVariable(IXACT3Engine *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE *nValue)
+{
+    XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+
+    TRACE("(%p)->(%u, %p)\n", This, nIndex, nValue);
+
+    return FACTAudioEngine_GetGlobalVariable(This->fact_engine, nIndex, nValue);
+}
+
+static const IXACT3EngineVtbl XACT3Engine_Vtbl =
+{
+    IXACT3EngineImpl_QueryInterface,
+    IXACT3EngineImpl_AddRef,
+    IXACT3EngineImpl_Release,
+    IXACT3EngineImpl_GetRendererCount,
+    IXACT3EngineImpl_GetRendererDetails,
+    IXACT3EngineImpl_GetFinalMixFormat,
+    IXACT3EngineImpl_Initialize,
+    IXACT3EngineImpl_ShutDown,
+    IXACT3EngineImpl_DoWork,
+    IXACT3EngineImpl_CreateSoundBank,
+    IXACT3EngineImpl_CreateInMemoryWaveBank,
+    IXACT3EngineImpl_CreateStreamingWaveBank,
+    IXACT3EngineImpl_PrepareWave,
+    IXACT3EngineImpl_PrepareInMemoryWave,
+    IXACT3EngineImpl_PrepareStreamingWave,
+    IXACT3EngineImpl_RegisterNotification,
+    IXACT3EngineImpl_UnRegisterNotification,
+    IXACT3EngineImpl_GetCategory,
+    IXACT3EngineImpl_Stop,
+    IXACT3EngineImpl_SetVolume,
+    IXACT3EngineImpl_Pause,
+    IXACT3EngineImpl_GetGlobalVariableIndex,
+    IXACT3EngineImpl_SetGlobalVariable,
+    IXACT3EngineImpl_GetGlobalVariable
+};
+
+void* XACT_Internal_Malloc(size_t size)
+{
+    return CoTaskMemAlloc(size);
+}
+
+void XACT_Internal_Free(void* ptr)
+{
+    return CoTaskMemFree(ptr);
+}
+
+void* XACT_Internal_Realloc(void* ptr, size_t size)
+{
+    return CoTaskMemRealloc(ptr, size);
+}
+
+static HRESULT WINAPI XACT3CF_QueryInterface(IClassFactory *iface, REFIID riid, void **ppobj)
+{
+    if(IsEqualGUID(riid, &IID_IUnknown) ||
+       IsEqualGUID(riid, &IID_IClassFactory))
+    {
+        *ppobj = iface;
+        return S_OK;
+    }
+
+    *ppobj = NULL;
+    WARN("(%p)->(%s, %p): interface not found\n", iface, debugstr_guid(riid), ppobj);
+    return E_NOINTERFACE;
+}
+
+static ULONG WINAPI XACT3CF_AddRef(IClassFactory *iface)
+{
+    return 2;
+}
+
+static ULONG WINAPI XACT3CF_Release(IClassFactory *iface)
+{
+    return 1;
+}
+
+static HRESULT WINAPI XACT3CF_CreateInstance(IClassFactory *iface, IUnknown *pOuter,
+                                               REFIID riid, void **ppobj)
+{
+    HRESULT hr;
+    XACT3EngineImpl *object;
+
+    TRACE("(%p)->(%p,%s,%p)\n", iface, pOuter, debugstr_guid(riid), ppobj);
+
+    *ppobj = NULL;
+
+    if(pOuter)
+        return CLASS_E_NOAGGREGATION;
+
+    object = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*object));
+    if(!object)
+        return E_OUTOFMEMORY;
+
+    object->IXACT3Engine_iface.lpVtbl = &XACT3Engine_Vtbl;
+
+    FACTCreateEngineWithCustomAllocatorEXT(
+        0,
+        &object->fact_engine,
+        XACT_Internal_Malloc,
+        XACT_Internal_Free,
+        XACT_Internal_Realloc
+    );
+
+    hr = IXACT3Engine_QueryInterface(&object->IXACT3Engine_iface, riid, ppobj);
+    if(FAILED(hr)){
+        HeapFree(GetProcessHeap(), 0, object);
+        return hr;
+    }
+
+    return hr;
+}
+
+static HRESULT WINAPI XACT3CF_LockServer(IClassFactory *iface, BOOL dolock)
+{
+    TRACE("(%p)->(%d): stub!\n", iface, dolock);
+    return S_OK;
+}
+
+static const IClassFactoryVtbl XACT3CF_Vtbl =
+{
+    XACT3CF_QueryInterface,
+    XACT3CF_AddRef,
+    XACT3CF_Release,
+    XACT3CF_CreateInstance,
+    XACT3CF_LockServer
+};
+
+static IClassFactory XACTFactory = { &XACT3CF_Vtbl };
+
 BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD reason, void *pReserved)
 {
     TRACE("(%p, %d, %p)\n", hinstDLL, reason, pReserved);
@@ -50,8 +506,13 @@ HRESULT WINAPI DllCanUnloadNow(void)
 
 HRESULT WINAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, void **ppv)
 {
-    FIXME("(%s, %s, %p)\n", debugstr_guid(rclsid), debugstr_guid(riid), ppv);
+    if (IsEqualGUID(rclsid, &CLSID_XACTEngine37))
+    {
+        TRACE("(%s, %s, %p)\n", debugstr_guid(rclsid), debugstr_guid(riid), ppv);
+        return IClassFactory_QueryInterface(&XACTFactory, riid, ppv);
+    }
 
+    FIXME("Unknown class %s\n", debugstr_guid(rclsid));
     return CLASS_E_CLASSNOTAVAILABLE;
 }
 
From 47a5de3438a30dbcc5a729e3442103015b99be34 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 4 Aug 2020 11:30:33 +1000
Subject: [PATCH] xactengine3_7: Return valid HRESULT from IXACT3Engine
 Initialize.

FAudio doesn't always return a valid HRESULT, ensure a valid code
is passed back to the application.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 3a14db74608..69570e8ceff 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -157,6 +157,7 @@ static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
     FACTRuntimeParameters params;
+    UINT ret;
 
     TRACE("(%p)->(%p)\n", This, pParams);
 
@@ -195,7 +196,11 @@ static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
     params.fileIOCallbacks.readFileCallback = wrap_readfile;
     params.fileIOCallbacks.getOverlappedResultCallback = wrap_getoverlappedresult;
 
-    return FACTAudioEngine_Initialize(This->fact_engine, &params);
+    ret = FACTAudioEngine_Initialize(This->fact_engine, &params);
+    if (ret != 0)
+        WARN("FACTAudioEngine_Initialize returned %d\n", ret);
+
+    return !ret ? S_OK : E_FAIL;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_ShutDown(IXACT3Engine *iface)
From b63f17ab49098de9cb662f813af5503347248756 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:07:24 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3SoundBank Interface.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 137 +++++++++++++++++++++++++++++++++-
 1 file changed, 135 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 69570e8ceff..828739533cd 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -34,6 +34,112 @@ WINE_DEFAULT_DEBUG_CHANNEL(xact3);
 
 static HINSTANCE instance;
 
+typedef struct _XACT3SoundBankImpl {
+    IXACT3SoundBank IXACT3SoundBank_iface;
+
+    FACTSoundBank *fact_soundbank;
+} XACT3SoundBankImpl;
+
+static inline XACT3SoundBankImpl *impl_from_IXACT3SoundBank(IXACT3SoundBank *iface)
+{
+    return CONTAINING_RECORD(iface, XACT3SoundBankImpl, IXACT3SoundBank_iface);
+}
+
+static XACTINDEX WINAPI IXACT3SoundBankImpl_GetCueIndex(IXACT3SoundBank *iface,
+        PCSTR szFriendlyName)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+
+    TRACE("(%p)->(%s)\n", This, szFriendlyName);
+
+    return FACTSoundBank_GetCueIndex(This->fact_soundbank, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_GetNumCues(IXACT3SoundBank *iface,
+        XACTINDEX *pnNumCues)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pnNumCues);
+
+    return FACTSoundBank_GetNumCues(This->fact_soundbank, pnNumCues);
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_GetCueProperties(IXACT3SoundBank *iface,
+        XACTINDEX nCueIndex, XACT_CUE_PROPERTIES *pProperties)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+
+    TRACE("(%p)->(%u, %p)\n", This, nCueIndex, pProperties);
+
+    return FACTSoundBank_GetCueProperties(This->fact_soundbank, nCueIndex,
+            (FACTCueProperties*) pProperties);
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_Prepare(IXACT3SoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset,
+        IXACT3Cue** ppCue)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+            ppCue);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_Play(IXACT3SoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset,
+        IXACT3Cue** ppCue)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+            ppCue);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_Stop(IXACT3SoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+
+    TRACE("(%p)->(%u)\n", This, dwFlags);
+
+    return FACTSoundBank_Stop(This->fact_soundbank, nCueIndex, dwFlags);
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_Destroy(IXACT3SoundBank *iface)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", This);
+
+    hr = FACTSoundBank_Destroy(This->fact_soundbank);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACT3SoundBankImpl_GetState(IXACT3SoundBank *iface,
+        DWORD *pdwState)
+{
+    XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pdwState);
+
+    return FACTSoundBank_GetState(This->fact_soundbank, pdwState);
+}
+
+static const IXACT3SoundBankVtbl XACT3SoundBank_Vtbl =
+{
+    IXACT3SoundBankImpl_GetCueIndex,
+    IXACT3SoundBankImpl_GetNumCues,
+    IXACT3SoundBankImpl_GetCueProperties,
+    IXACT3SoundBankImpl_Prepare,
+    IXACT3SoundBankImpl_Play,
+    IXACT3SoundBankImpl_Stop,
+    IXACT3SoundBankImpl_Destroy,
+    IXACT3SoundBankImpl_GetState
+};
+
 typedef struct _XACT3EngineImpl {
     IXACT3Engine IXACT3Engine_iface;
 
@@ -226,9 +332,36 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateSoundBank(IXACT3Engine *iface,
         DWORD dwAllocAttributes, IXACT3SoundBank **ppSoundBank)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
+    XACT3SoundBankImpl *sb;
+    FACTSoundBank *fsb;
+    UINT ret;
+
+    TRACE("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
             dwAllocAttributes, ppSoundBank);
-    return E_NOTIMPL;
+
+    ret = FACTAudioEngine_CreateSoundBank(This->fact_engine, pvBuffer, dwSize,
+            dwFlags, dwAllocAttributes, &fsb);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateSoundBank: %d\n", ret);
+        return E_FAIL;
+    }
+
+    sb = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*sb));
+    if (!sb)
+    {
+        FACTSoundBank_Destroy(fsb);
+        ERR("Failed to allocate XACT3SoundBankImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    sb->IXACT3SoundBank_iface.lpVtbl = &XACT3SoundBank_Vtbl;
+    sb->fact_soundbank = fsb;
+    *ppSoundBank = (IXACT3SoundBank*)sb;
+
+    TRACE("Created SoundBank: %p\n", sb);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *iface,
From e8321d7de9dafd7303977ffd69b6d6be69b2ee6d Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:21:39 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3Cue Interface.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 183 +++++++++++++++++++++++++++++++++-
 1 file changed, 181 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 828739533cd..7e1add41fec 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -34,6 +34,158 @@ WINE_DEFAULT_DEBUG_CHANNEL(xact3);
 
 static HINSTANCE instance;
 
+typedef struct _XACT3CueImpl {
+    IXACT3Cue IXACT3Cue_iface;
+    FACTCue *fact_cue;
+} XACT3CueImpl;
+
+static inline XACT3CueImpl *impl_from_IXACT3Cue(IXACT3Cue *iface)
+{
+    return CONTAINING_RECORD(iface, XACT3CueImpl, IXACT3Cue_iface);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_Play(IXACT3Cue *iface)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)\n", iface);
+
+    return FACTCue_Play(This->fact_cue);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_Stop(IXACT3Cue *iface, DWORD dwFlags)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%u)\n", iface, dwFlags);
+
+    return FACTCue_Stop(This->fact_cue, dwFlags);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_GetState(IXACT3Cue *iface, DWORD *pdwState)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%p)\n", iface, pdwState);
+
+    return FACTCue_GetState(This->fact_cue, pdwState);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_Destroy(IXACT3Cue *iface)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", iface);
+
+    hr = FACTCue_Destroy(This->fact_cue);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACT3CueImpl_SetMatrixCoefficients(IXACT3Cue *iface,
+        UINT32 uSrcChannelCount, UINT32 uDstChannelCount,
+        float *pMatrixCoefficients)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%u, %u, %p)\n", iface, uSrcChannelCount, uDstChannelCount,
+            pMatrixCoefficients);
+
+    return FACTCue_SetMatrixCoefficients(This->fact_cue, uSrcChannelCount,
+        uDstChannelCount, pMatrixCoefficients);
+}
+
+static XACTVARIABLEINDEX WINAPI IXACT3CueImpl_GetVariableIndex(IXACT3Cue *iface,
+        PCSTR szFriendlyName)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%s)\n", iface, szFriendlyName);
+
+    return FACTCue_GetVariableIndex(This->fact_cue, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_SetVariable(IXACT3Cue *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE nValue)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%u, %f)\n", iface, nIndex, nValue);
+
+    return FACTCue_SetVariable(This->fact_cue, nIndex, nValue);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_GetVariable(IXACT3Cue *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE *nValue)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%u, %p)\n", iface, nIndex, nValue);
+
+    return FACTCue_GetVariable(This->fact_cue, nIndex, nValue);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_Pause(IXACT3Cue *iface, BOOL fPause)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+
+    TRACE("(%p)->(%u)\n", iface, fPause);
+
+    return FACTCue_Pause(This->fact_cue, fPause);
+}
+
+static HRESULT WINAPI IXACT3CueImpl_GetProperties(IXACT3Cue *iface,
+        XACT_CUE_INSTANCE_PROPERTIES **ppProperties)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+    FACTCueInstanceProperties *fProps;
+    HRESULT hr;
+
+    TRACE("(%p)->(%p)\n", iface, ppProperties);
+
+    hr = FACTCue_GetProperties(This->fact_cue, &fProps);
+    if(FAILED(hr))
+        return hr;
+
+    *ppProperties = (XACT_CUE_INSTANCE_PROPERTIES*) fProps;
+    return hr;
+}
+
+static HRESULT WINAPI IXACT3CueImpl_SetOutputVoices(IXACT3Cue *iface,
+        const XAUDIO2_VOICE_SENDS *pSendList)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+    FIXME("(%p)->(%p): stub!\n", This, pSendList);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACT3CueImpl_SetOutputVoiceMatrix(IXACT3Cue *iface,
+        IXAudio2Voice *pDestinationVoice, UINT32 SourceChannels,
+        UINT32 DestinationChannels, const float *pLevelMatrix)
+{
+    XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
+    FIXME("(%p)->(%p %u %u %p): stub!\n", This, pDestinationVoice, SourceChannels,
+            DestinationChannels, pLevelMatrix);
+    return S_OK;
+}
+
+static const IXACT3CueVtbl XACT3Cue_Vtbl =
+{
+    IXACT3CueImpl_Play,
+    IXACT3CueImpl_Stop,
+    IXACT3CueImpl_GetState,
+    IXACT3CueImpl_Destroy,
+    IXACT3CueImpl_SetMatrixCoefficients,
+    IXACT3CueImpl_GetVariableIndex,
+    IXACT3CueImpl_SetVariable,
+    IXACT3CueImpl_GetVariable,
+    IXACT3CueImpl_Pause,
+    IXACT3CueImpl_GetProperties,
+    IXACT3CueImpl_SetOutputVoices,
+    IXACT3CueImpl_SetOutputVoiceMatrix
+};
+
 typedef struct _XACT3SoundBankImpl {
     IXACT3SoundBank IXACT3SoundBank_iface;
 
@@ -81,9 +233,36 @@ static HRESULT WINAPI IXACT3SoundBankImpl_Prepare(IXACT3SoundBank *iface,
         IXACT3Cue** ppCue)
 {
     XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
-    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+    XACT3CueImpl *cue;
+    FACTCue *fcue;
+    UINT ret;
+
+    TRACE("(%p)->(%u, 0x%x, %u, %p)\n", This, nCueIndex, dwFlags, timeOffset,
             ppCue);
-    return E_NOTIMPL;
+
+    ret = FACTSoundBank_Prepare(This->fact_soundbank, nCueIndex, dwFlags,
+            timeOffset, &fcue);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateCue: %d\n", ret);
+        return E_FAIL;
+    }
+
+    cue = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*cue));
+    if (!cue)
+    {
+        FACTCue_Destroy(fcue);
+        ERR("Failed to allocate XACT3CueImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    cue->IXACT3Cue_iface.lpVtbl = &XACT3Cue_Vtbl;
+    cue->fact_cue = fcue;
+    *ppCue = (IXACT3Cue*)&cue->IXACT3Cue_iface;
+
+    TRACE("Created Cue: %p\n", cue);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3SoundBankImpl_Play(IXACT3SoundBank *iface,
From 7c9ed2eeb4bceb1d8450c6c98c57df85cb25e40e Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 5 Aug 2020 14:38:37 +1000
Subject: [PATCH] include: Define all CLSID/IID_IXACT3Engine versions.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3.h | 27 +++++++++++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

diff --git a/include/xact3.h b/include/xact3.h
index 80059c124a5..2b4f0e07f3c 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -30,11 +30,34 @@
 extern "C" {
 #endif
 
-DEFINE_GUID(CLSID_XACTEngine,         0xbcc782bc, 0x6492, 0x4c22, 0x8c, 0x35, 0xf5, 0xd7, 0x2f, 0xe7, 0x3c, 0x6e);
+#if XACT3_VER == 0x0300
+    DEFINE_GUID(CLSID_XACTEngine, 0x3b80ee2a, 0xb0f5, 0x4780, 0x9e, 0x30, 0x90, 0xcb, 0x39, 0x68, 0x5b, 0x03);
+#elif XACT3_VER == 0x0301
+    DEFINE_GUID(CLSID_XACTEngine, 0x962f5027, 0x99be, 0x4692, 0xa4, 0x68, 0x85, 0x80, 0x2c, 0xf8, 0xde, 0x61);
+#elif XACT3_VER == 0x0302
+    DEFINE_GUID(CLSID_XACTEngine, 0xd3332f02, 0x3dd0, 0x4de9, 0x9a, 0xec, 0x20, 0xd8, 0x5c, 0x41, 0x11, 0xb6);
+#elif XACT3_VER == 0x0303
+    DEFINE_GUID(CLSID_XACTEngine, 0x94c1affa, 0x66e7, 0x4961, 0x95, 0x21, 0xcf, 0xde, 0xf3, 0x12, 0x8d, 0x4f);
+#elif XACT3_VER == 0x0304
+    DEFINE_GUID(CLSID_XACTEngine, 0x0977d092, 0x2d95, 0x4e43, 0x8d, 0x42, 0x9d, 0xdc, 0xc2, 0x54, 0x5e, 0xd5);
+#elif XACT3_VER == 0x0305
+    DEFINE_GUID(CLSID_XACTEngine, 0x074b110f, 0x7f58, 0x4743, 0xae, 0xa5, 0x12, 0xf1, 0x5b, 0x50, 0x74, 0xed);
+#elif XACT3_VER == 0x0306
+    DEFINE_GUID(CLSID_XACTEngine, 0x248d8a3b, 0x6256, 0x44d3, 0xa0, 0x18, 0x2a, 0xc9, 0x6c, 0x45, 0x9f, 0x47);
+#else /* XACT3_VER == 0x0307 or not defined */
+    DEFINE_GUID(CLSID_XACTEngine, 0xbcc782bc, 0x6492, 0x4c22, 0x8c, 0x35, 0xf5, 0xd7, 0x2f, 0xe7, 0x3c, 0x6e);
+#endif
+
 DEFINE_GUID(CLSID_XACTAuditionEngine, 0x9ecdd80d, 0x0e81, 0x40d8, 0x89, 0x03, 0x2b, 0xf7, 0xb1, 0x31, 0xac, 0x43);
 DEFINE_GUID(CLSID_XACTDebugEngine,    0x02860630, 0xbf3b, 0x42a8, 0xb1, 0x4e, 0x91, 0xed, 0xa2, 0xf5, 0x1e, 0xa5);
 
-DEFINE_GUID(IID_IXACT3Engine,          0xb1ee676a, 0xd9cd, 0x4d2a, 0x89, 0xa8, 0xfa, 0x53, 0xeb, 0x9e, 0x48, 0x0b);
+#if XACT3_VER == 0x0300
+    DEFINE_GUID(IID_IXACT3Engine, 0x9e33f661, 0x2d07, 0x43ec, 0x97, 0x04, 0xbb, 0xcb, 0x71, 0xa5, 0x49, 0x72);
+#elif XACT3_VER >= 0x0301 && XACT3_VER <= 0x304
+    DEFINE_GUID(IID_IXACT3Engine, 0xe72c1b9a, 0xd717, 0x41c0, 0x81, 0xa6, 0x50, 0xeb, 0x56, 0xe8, 0x06, 0x49);
+#else
+    DEFINE_GUID(IID_IXACT3Engine, 0xb1ee676a, 0xd9cd, 0x4d2a, 0x89, 0xa8, 0xfa, 0x53, 0xeb, 0x9e, 0x48, 0x0b);
+#endif
 
 typedef struct IXACT3SoundBank IXACT3SoundBank;
 typedef struct IXACT3WaveBank  IXACT3WaveBank;
From 93bf951e1c1e2df700ce60f24db95a1436821357 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 5 Aug 2020 14:38:38 +1000
Subject: [PATCH] xactengine3_7: Use CLSID defined from global header.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/Makefile.in | 1 +
 dlls/xactengine3_7/xact_dll.c  | 3 +--
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/Makefile.in b/dlls/xactengine3_7/Makefile.in
index 6fce27d1628..6d486171622 100644
--- a/dlls/xactengine3_7/Makefile.in
+++ b/dlls/xactengine3_7/Makefile.in
@@ -1,5 +1,6 @@
 MODULE    = xactengine3_7.dll
 IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0307
 EXTRALIBS = $(FAUDIO_LIBS)
 EXTRAINCL = $(FAUDIO_CFLAGS)
 
diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 7e1add41fec..52bf9e5210c 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -27,7 +27,6 @@
 #include "initguid.h"
 #include "xact3.h"
 #include "rpcproxy.h"
-#include "xact_classes.h"
 #include "wine/debug.h"
 
 WINE_DEFAULT_DEBUG_CHANNEL(xact3);
@@ -823,7 +822,7 @@ HRESULT WINAPI DllCanUnloadNow(void)
 
 HRESULT WINAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, void **ppv)
 {
-    if (IsEqualGUID(rclsid, &CLSID_XACTEngine37))
+    if (IsEqualGUID(rclsid, &CLSID_XACTEngine))
     {
         TRACE("(%s, %s, %p)\n", debugstr_guid(rclsid), debugstr_guid(riid), ppv);
         return IClassFactory_QueryInterface(&XACTFactory, riid, ppv);
From da2efd545b276b438e4318476a91549a843cb809 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:36:55 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3WaveBank Interface.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 137 +++++++++++++++++++++++++++++++++-
 1 file changed, 135 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 52bf9e5210c..43d2833cd70 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -318,6 +318,112 @@ static const IXACT3SoundBankVtbl XACT3SoundBank_Vtbl =
     IXACT3SoundBankImpl_GetState
 };
 
+typedef struct _XACT3WaveBankImpl {
+    IXACT3WaveBank IXACT3WaveBank_iface;
+
+    FACTWaveBank *fact_wavebank;
+} XACT3WaveBankImpl;
+
+static inline XACT3WaveBankImpl *impl_from_IXACT3WaveBank(IXACT3WaveBank *iface)
+{
+    return CONTAINING_RECORD(iface, XACT3WaveBankImpl, IXACT3WaveBank_iface);
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_Destroy(IXACT3WaveBank *iface)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", This);
+
+    hr = FACTWaveBank_Destroy(This->fact_wavebank);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_GetNumWaves(IXACT3WaveBank *iface,
+        XACTINDEX *pnNumWaves)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pnNumWaves);
+
+    return FACTWaveBank_GetNumWaves(This->fact_wavebank, pnNumWaves);
+}
+
+static XACTINDEX WINAPI IXACT3WaveBankImpl_GetWaveIndex(IXACT3WaveBank *iface,
+        PCSTR szFriendlyName)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+
+    TRACE("(%p)->(%s)\n", This, szFriendlyName);
+
+    return FACTWaveBank_GetWaveIndex(This->fact_wavebank, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_GetWaveProperties(IXACT3WaveBank *iface,
+        XACTINDEX nWaveIndex, XACT_WAVE_PROPERTIES *pWaveProperties)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+
+    TRACE("(%p)->(%u, %p)\n", This, nWaveIndex, pWaveProperties);
+
+    return FACTWaveBank_GetWaveProperties(This->fact_wavebank, nWaveIndex,
+            (FACTWaveProperties*) pWaveProperties);
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_Prepare(IXACT3WaveBank *iface,
+        XACTINDEX nWaveIndex, DWORD dwFlags, DWORD dwPlayOffset,
+        XACTLOOPCOUNT nLoopCount, IXACT3Wave** ppWave)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+    FIXME("(%p)->(0x%x, %u, 0x%x, %u, %p): stub!\n", This, nWaveIndex, dwFlags,
+            dwPlayOffset, nLoopCount, ppWave);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_Play(IXACT3WaveBank *iface,
+        XACTINDEX nWaveIndex, DWORD dwFlags, DWORD dwPlayOffset,
+        XACTLOOPCOUNT nLoopCount, IXACT3Wave** ppWave)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+    FIXME("(%p)->(0x%x, %u, 0x%x, %u, %p): stub!\n", This, nWaveIndex, dwFlags, dwPlayOffset,
+            nLoopCount, ppWave);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_Stop(IXACT3WaveBank *iface,
+        XACTINDEX nWaveIndex, DWORD dwFlags)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+
+    TRACE("(%p)->(%u, %u)\n", This, nWaveIndex, dwFlags);
+
+    return FACTWaveBank_Stop(This->fact_wavebank, nWaveIndex, dwFlags);
+}
+
+static HRESULT WINAPI IXACT3WaveBankImpl_GetState(IXACT3WaveBank *iface,
+        DWORD *pdwState)
+{
+    XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pdwState);
+
+    return FACTWaveBank_GetState(This->fact_wavebank, pdwState);
+}
+
+static const IXACT3WaveBankVtbl XACT3WaveBank_Vtbl =
+{
+    IXACT3WaveBankImpl_Destroy,
+    IXACT3WaveBankImpl_GetNumWaves,
+    IXACT3WaveBankImpl_GetWaveIndex,
+    IXACT3WaveBankImpl_GetWaveProperties,
+    IXACT3WaveBankImpl_Prepare,
+    IXACT3WaveBankImpl_Play,
+    IXACT3WaveBankImpl_Stop,
+    IXACT3WaveBankImpl_GetState
+};
+
 typedef struct _XACT3EngineImpl {
     IXACT3Engine IXACT3Engine_iface;
 
@@ -547,9 +653,36 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *ifac
         DWORD dwAllocAttributes, IXACT3WaveBank **ppWaveBank)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
+    XACT3WaveBankImpl *wb;
+    FACTWaveBank *fwb;
+    UINT ret;
+
+    TRACE("(%p)->(%p, %u, 0x%x, 0x%x, %p)\n", This, pvBuffer, dwSize, dwFlags,
             dwAllocAttributes, ppWaveBank);
-    return E_NOTIMPL;
+
+    ret = FACTAudioEngine_CreateInMemoryWaveBank(This->fact_engine, pvBuffer,
+            dwSize, dwFlags, dwAllocAttributes, &fwb);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateWaveBank: %d\n", ret);
+        return E_FAIL;
+    }
+
+    wb = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wb));
+    if (!wb)
+    {
+        FACTWaveBank_Destroy(fwb);
+        ERR("Failed to allocate XACT3WaveBankImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wb->IXACT3WaveBank_iface.lpVtbl = &XACT3WaveBank_Vtbl;
+    wb->fact_wavebank = fwb;
+    *ppWaveBank = (IXACT3WaveBank*)wb;
+
+    TRACE("Created in-memory WaveBank: %p\n", wb);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *iface,
From 996e706ad346dc7fd61dc9856764167dc1592712 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:44:31 +0200
Subject: [PATCH] xactengine3_7: Implement
 IXACT3Engine::CreateStreamingWaveBank.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 43 +++++++++++++++++++++++++++++++++--
 1 file changed, 41 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 43d2833cd70..dc4d9c01ac7 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -690,8 +690,47 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *ifa
         IXACT3WaveBank **ppWaveBank)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p)->(%p, %p): stub!\n", This, pParms, ppWaveBank);
-    return E_NOTIMPL;
+    FACTStreamingParameters fakeParms;
+    wrap_readfile_struct *fake;
+    XACT3WaveBankImpl *wb;
+    FACTWaveBank *fwb;
+    UINT ret;
+
+    TRACE("(%p)->(%p, %p)\n", This, pParms, ppWaveBank);
+
+    /* We have to wrap the file to fix up the callbacks! */
+    fake = (wrap_readfile_struct*) CoTaskMemAlloc(
+            sizeof(wrap_readfile_struct));
+    fake->engine = This;
+    fake->file = pParms->file;
+    fakeParms.file = fake;
+    fakeParms.flags = pParms->flags;
+    fakeParms.offset = pParms->offset;
+    fakeParms.packetSize = pParms->packetSize;
+
+    ret = FACTAudioEngine_CreateStreamingWaveBank(This->fact_engine, &fakeParms,
+            &fwb);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateWaveBank: %d\n", ret);
+        return E_FAIL;
+    }
+
+    wb = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wb));
+    if (!wb)
+    {
+        FACTWaveBank_Destroy(fwb);
+        ERR("Failed to allocate XACT3WaveBankImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wb->IXACT3WaveBank_iface.lpVtbl = &XACT3WaveBank_Vtbl;
+    wb->fact_wavebank = fwb;
+    *ppWaveBank = (IXACT3WaveBank*)wb;
+
+    TRACE("Created streaming WaveBank: %p\n", wb);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_PrepareInMemoryWave(IXACT3Engine *iface,
From 568227cc039ce16f232008f34fb72fc6aecc5029 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:51:16 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3Wave interface.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 145 +++++++++++++++++++++++++++++++++-
 1 file changed, 143 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index dc4d9c01ac7..267863f930b 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -318,6 +318,120 @@ static const IXACT3SoundBankVtbl XACT3SoundBank_Vtbl =
     IXACT3SoundBankImpl_GetState
 };
 
+typedef struct _XACT3WaveImpl {
+    IXACT3Wave IXACT3Wave_iface;
+
+    FACTWave *fact_wave;
+} XACT3WaveImpl;
+
+static inline XACT3WaveImpl *impl_from_IXACT3Wave(IXACT3Wave *iface)
+{
+    return CONTAINING_RECORD(iface, XACT3WaveImpl, IXACT3Wave_iface);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_Destroy(IXACT3Wave *iface)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", This);
+
+    hr = FACTWave_Destroy(This->fact_wave);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_Play(IXACT3Wave *iface)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)\n", This);
+
+    return FACTWave_Play(This->fact_wave);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_Stop(IXACT3Wave *iface, DWORD dwFlags)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(0x%x)\n", This, dwFlags);
+
+    return FACTWave_Stop(This->fact_wave, dwFlags);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_Pause(IXACT3Wave *iface, BOOL fPause)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%u)\n", This, fPause);
+
+    return FACTWave_Pause(This->fact_wave, fPause);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_GetState(IXACT3Wave *iface, DWORD *pdwState)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%p)\n", This, pdwState);
+
+    return FACTWave_GetState(This->fact_wave, pdwState);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_SetPitch(IXACT3Wave *iface, XACTPITCH pitch)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%d)\n", This, pitch);
+
+    return FACTWave_SetPitch(This->fact_wave, pitch);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_SetVolume(IXACT3Wave *iface, XACTVOLUME volume)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%f)\n", This, volume);
+
+    return FACTWave_SetVolume(This->fact_wave, volume);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_SetMatrixCoefficients(IXACT3Wave *iface,
+        UINT32 uSrcChannelCount, UINT32 uDstChannelCount,
+        float *pMatrixCoefficients)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%u, %u, %p)\n", This, uSrcChannelCount, uDstChannelCount,
+            pMatrixCoefficients);
+
+    return FACTWave_SetMatrixCoefficients(This->fact_wave, uSrcChannelCount,
+            uDstChannelCount, pMatrixCoefficients);
+}
+
+static HRESULT WINAPI IXACT3WaveImpl_GetProperties(IXACT3Wave *iface,
+    XACT_WAVE_INSTANCE_PROPERTIES *pProperties)
+{
+    XACT3WaveImpl *This = impl_from_IXACT3Wave(iface);
+
+    TRACE("(%p)->(%p)\n", This, pProperties);
+
+    return FACTWave_GetProperties(This->fact_wave,
+            (FACTWaveInstanceProperties*) pProperties);
+}
+
+static const IXACT3WaveVtbl XACT3Wave_Vtbl =
+{
+    IXACT3WaveImpl_Destroy,
+    IXACT3WaveImpl_Play,
+    IXACT3WaveImpl_Stop,
+    IXACT3WaveImpl_Pause,
+    IXACT3WaveImpl_GetState,
+    IXACT3WaveImpl_SetPitch,
+    IXACT3WaveImpl_SetVolume,
+    IXACT3WaveImpl_SetMatrixCoefficients,
+    IXACT3WaveImpl_GetProperties
+};
+
 typedef struct _XACT3WaveBankImpl {
     IXACT3WaveBank IXACT3WaveBank_iface;
 
@@ -377,9 +491,36 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Prepare(IXACT3WaveBank *iface,
         XACTLOOPCOUNT nLoopCount, IXACT3Wave** ppWave)
 {
     XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
-    FIXME("(%p)->(0x%x, %u, 0x%x, %u, %p): stub!\n", This, nWaveIndex, dwFlags,
+    XACT3WaveImpl *wave;
+    FACTWave *fwave;
+    UINT ret;
+
+    TRACE("(%p)->(0x%x, %u, 0x%x, %u, %p)\n", This, nWaveIndex, dwFlags,
             dwPlayOffset, nLoopCount, ppWave);
-    return E_NOTIMPL;
+
+    ret = FACTWaveBank_Prepare(This->fact_wavebank, nWaveIndex, dwFlags,
+            dwPlayOffset, nLoopCount, &fwave);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateWave: %d\n", ret);
+        return E_FAIL;
+    }
+
+    wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+    if (!wave)
+    {
+        FACTWave_Destroy(fwave);
+        ERR("Failed to allocate XACT3WaveImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
+    wave->fact_wave = fwave;
+    *ppWave = (IXACT3Wave*)wave;
+
+    TRACE("Created Wave: %p\n", wave);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3WaveBankImpl_Play(IXACT3WaveBank *iface,
From 127ef80f0f9370a148357b7c1f001c3477a52264 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:27:46 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3SoundBank::Play function.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 267863f930b..2c7eff08fc7 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -269,9 +269,40 @@ static HRESULT WINAPI IXACT3SoundBankImpl_Play(IXACT3SoundBank *iface,
         IXACT3Cue** ppCue)
 {
     XACT3SoundBankImpl *This = impl_from_IXACT3SoundBank(iface);
-    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+    XACT3CueImpl *cue;
+    FACTCue *fcue;
+    HRESULT hr;
+
+    TRACE("(%p)->(%u, 0x%x, %u, %p)\n", This, nCueIndex, dwFlags, timeOffset,
             ppCue);
-    return E_NOTIMPL;
+
+    /* If the application doesn't want a handle, don't generate one at all.
+     * Let the engine handle that memory instead.
+     * -flibit
+     */
+    if (ppCue == NULL){
+        hr = FACTSoundBank_Play(This->fact_soundbank, nCueIndex, dwFlags,
+                timeOffset, NULL);
+    }else{
+        hr = FACTSoundBank_Play(This->fact_soundbank, nCueIndex, dwFlags,
+                timeOffset, &fcue);
+        if(FAILED(hr))
+            return hr;
+
+        cue = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*cue));
+        if (!cue)
+        {
+            FACTCue_Destroy(fcue);
+            ERR("Failed to allocate XACT3CueImpl!");
+            return E_OUTOFMEMORY;
+        }
+
+        cue->IXACT3Cue_iface.lpVtbl = &XACT3Cue_Vtbl;
+        cue->fact_cue = fcue;
+        *ppCue = (IXACT3Cue*)&cue->IXACT3Cue_iface;
+    }
+
+    return hr;
 }
 
 static HRESULT WINAPI IXACT3SoundBankImpl_Stop(IXACT3SoundBank *iface,
From 00c5e09fafa51fe536b300eb02d17a7b9baded24 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:54:07 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3WaveBank::Play function.

Based on patch from Ethan Lee.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 2c7eff08fc7..ce9059221af 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -559,9 +559,40 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Play(IXACT3WaveBank *iface,
         XACTLOOPCOUNT nLoopCount, IXACT3Wave** ppWave)
 {
     XACT3WaveBankImpl *This = impl_from_IXACT3WaveBank(iface);
-    FIXME("(%p)->(0x%x, %u, 0x%x, %u, %p): stub!\n", This, nWaveIndex, dwFlags, dwPlayOffset,
+    XACT3WaveImpl *wave;
+    FACTWave *fwave;
+    HRESULT hr;
+
+    TRACE("(%p)->(0x%x, %u, 0x%x, %u, %p)\n", This, nWaveIndex, dwFlags, dwPlayOffset,
             nLoopCount, ppWave);
-    return E_NOTIMPL;
+
+    /* If the application doesn't want a handle, don't generate one at all.
+     * Let the engine handle that memory instead.
+     * -flibit
+     */
+    if (ppWave == NULL){
+        hr = FACTWaveBank_Play(This->fact_wavebank, nWaveIndex, dwFlags,
+                dwPlayOffset, nLoopCount, NULL);
+    }else{
+        hr = FACTWaveBank_Play(This->fact_wavebank, nWaveIndex, dwFlags,
+                dwPlayOffset, nLoopCount, &fwave);
+        if(FAILED(hr))
+            return hr;
+
+        wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+        if (!wave)
+        {
+            FACTWave_Destroy(fwave);
+            ERR("Failed to allocate XACT3WaveImpl!");
+            return E_OUTOFMEMORY;
+        }
+
+        wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
+        wave->fact_wave = fwave;
+        *ppWave = (IXACT3Wave*)wave;
+    }
+
+    return hr;
 }
 
 static HRESULT WINAPI IXACT3WaveBankImpl_Stop(IXACT3WaveBank *iface,
From 81b5e2d112c2c3680da268ab1afce1d2f6b08312 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Sat, 18 Jul 2020 22:59:25 +0200
Subject: [PATCH] xactengine3_7: Implement IXACT3Engine::RegisterNotification
 and IXACT3Engine::UnRegisterNotification functions.

Based on patches from Ethan Lee and Alistair Leslie-Hughes.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 100 ++++++++++++++++++++++++++++++++--
 1 file changed, 96 insertions(+), 4 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index ce9059221af..cb8aed5f3aa 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -967,22 +967,114 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareWave(IXACT3Engine *iface,
     return E_NOTIMPL;
 }
 
+enum {
+    NOTIFY_SoundBank = 0x01,
+    NOTIFY_WaveBank  = 0x02,
+    NOTIFY_Cue       = 0x04,
+    NOTIFY_Wave      = 0x08,
+    NOTIFY_cueIndex  = 0x10,
+    NOTIFY_waveIndex = 0x20
+};
+
+static inline void unwrap_notificationdesc(FACTNotificationDescription *fd,
+        const XACT_NOTIFICATION_DESCRIPTION *xd)
+{
+    DWORD flags = 0;
+
+    TRACE("Type %d\n", xd->type);
+
+    memset(fd, 0, sizeof(*fd));
+
+    /* Supports SoundBank, Cue index, Cue instance */
+    if (xd->type == XACTNOTIFICATIONTYPE_CUEPREPARED || xd->type == XACTNOTIFICATIONTYPE_CUEPLAY ||
+        xd->type == XACTNOTIFICATIONTYPE_CUESTOP || xd->type == XACTNOTIFICATIONTYPE_CUEDESTROYED ||
+        xd->type == XACTNOTIFICATIONTYPE_MARKER || xd->type == XACTNOTIFICATIONTYPE_LOCALVARIABLECHANGED)
+    {
+        flags = NOTIFY_SoundBank | NOTIFY_cueIndex | NOTIFY_Cue;
+    }
+    /* Supports WaveBank */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEBANKDESTROYED || xd->type == XACTNOTIFICATIONTYPE_WAVEBANKPREPARED ||
+             xd->type == XACTNOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT)
+    {
+        flags = NOTIFY_WaveBank;
+    }
+    /* Supports NOTIFY_SoundBank */
+    else if (xd->type == XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED)
+    {
+        flags = NOTIFY_SoundBank;
+    }
+    /* Supports WaveBank, Wave index, Wave instance */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEPREPARED || xd->type == XACTNOTIFICATIONTYPE_WAVEDESTROYED)
+    {
+        flags = NOTIFY_WaveBank | NOTIFY_waveIndex | NOTIFY_Wave;
+    }
+    /* Supports SoundBank, SoundBank, Cue index, Cue instance, WaveBank, Wave instance */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEPLAY || xd->type == XACTNOTIFICATIONTYPE_WAVESTOP ||
+             xd->type == XACTNOTIFICATIONTYPE_WAVELOOPED)
+    {
+        flags = NOTIFY_SoundBank | NOTIFY_cueIndex | NOTIFY_Cue | NOTIFY_WaveBank | NOTIFY_Wave;
+    }
+
+    /* We have to unwrap the FACT object first! */
+    fd->type = xd->type;
+    fd->flags = xd->flags;
+    fd->pvContext = xd->pvContext;
+    if (flags & NOTIFY_cueIndex)
+        fd->cueIndex = xd->cueIndex;
+    if (flags & NOTIFY_waveIndex)
+        fd->waveIndex = xd->waveIndex;
+
+    if (flags & NOTIFY_Cue && xd->pCue != NULL)
+    {
+        XACT3CueImpl *cue = impl_from_IXACT3Cue(xd->pCue);
+        if (cue)
+            fd->pCue = cue->fact_cue;
+    }
+
+    if (flags & NOTIFY_SoundBank && xd->pSoundBank != NULL)
+    {
+        XACT3SoundBankImpl *sound = impl_from_IXACT3SoundBank(xd->pSoundBank);
+        if (sound)
+            fd->pSoundBank = sound->fact_soundbank;
+    }
+
+    if (flags & NOTIFY_WaveBank && xd->pWaveBank != NULL)
+    {
+        XACT3WaveBankImpl *bank = impl_from_IXACT3WaveBank(xd->pWaveBank);
+        if (bank)
+            fd->pWaveBank = bank->fact_wavebank;
+    }
+
+    if (flags & NOTIFY_Wave && xd->pWave != NULL)
+    {
+        XACT3WaveImpl *wave = impl_from_IXACT3Wave(xd->pWave);
+        if (wave)
+            fd->pWave = wave->fact_wave;
+    }
+}
+
 static HRESULT WINAPI IXACT3EngineImpl_RegisterNotification(IXACT3Engine *iface,
         const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FACTNotificationDescription fdesc;
 
-    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
-    return E_NOTIMPL;
+    TRACE("(%p)->(%p)\n", This, pNotificationDesc);
+
+    unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    return FACTAudioEngine_RegisterNotification(This->fact_engine, &fdesc);
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_UnRegisterNotification(IXACT3Engine *iface,
         const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
+    FACTNotificationDescription fdesc;
 
-    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
-    return E_NOTIMPL;
+    TRACE("(%p)->(%p)\n", This, pNotificationDesc);
+
+    unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    return FACTAudioEngine_UnRegisterNotification(This->fact_engine, &fdesc);
 }
 
 static XACTCATEGORY WINAPI IXACT3EngineImpl_GetCategory(IXACT3Engine *iface,
From 7362ebcaafc65658d155699b1f4c9c336ef6b8ea Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:29 +1000
Subject: [PATCH] xactengine3_6: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_6/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_6/xactengine3_6.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   | 11 ++++++++++-
 5 files changed, 30 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_6/Makefile.in
 create mode 100644 dlls/xactengine3_6/xactengine3_6.spec

diff --git a/configure b/configure
index 13c2078221c..fd67234faab 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_6
 enable_xactengine3_7
 enable_xapofx1_1
 enable_xapofx1_2
@@ -16633,6 +16634,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
     enable_xapofx1_2=${enable_xapofx1_2:-no}
@@ -21363,6 +21365,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_6 enable_xactengine3_6
 wine_fn_config_makefile dlls/xactengine3_7 enable_xactengine3_7
 wine_fn_config_makefile dlls/xapofx1_1 enable_xapofx1_1
 wine_fn_config_makefile dlls/xapofx1_2 enable_xapofx1_2
diff --git a/configure.ac b/configure.ac
index d54857181eb..9c481d2b0ac 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
     enable_xapofx1_2=${enable_xapofx1_2:-no}
@@ -3905,6 +3906,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_6)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_7)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_1)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_2)
diff --git a/dlls/xactengine3_6/Makefile.in b/dlls/xactengine3_6/Makefile.in
new file mode 100644
index 00000000000..fad71a2fd57
--- /dev/null
+++ b/dlls/xactengine3_6/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_6.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0306
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_6/xactengine3_6.spec b/dlls/xactengine3_6/xactengine3_6.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_6/xactengine3_6.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index 24c792e2f05..a6abeb773ca 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,9 +20,18 @@
 
 #pragma makedep register
 
+#if XACT3_VER == 0x0306
 [
-    helpstring("XACT3 Class"),
+    helpstring("XACT3.6 Class"),
+    threading(both),
+    uuid(248d8a3b-6256-44d3-a018-2ac96c459f47)
+]
+coclass XACTEngine36 { interface IXACT37Engine; }
+#else /* XACT3_VER == 0x0307 or not defined */
+[
+    helpstring("XACT3.7 Class"),
     threading(both),
     uuid(bcc782bc-6492-4c22-8c35-f5d72fe73c6e)
 ]
 coclass XACTEngine37 { interface IXACT37Engine; }
+#endif
From e736762f37df777cdc64bb3866ec6f751e692b60 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:30 +1000
Subject: [PATCH] xactengine3_5: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_5/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_5/xactengine3_5.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_5/Makefile.in
 create mode 100644 dlls/xactengine3_5/xactengine3_5.spec

diff --git a/configure b/configure
index fd67234faab..69bdebbfba4 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_5
 enable_xactengine3_6
 enable_xactengine3_7
 enable_xapofx1_1
@@ -16634,6 +16635,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
@@ -21365,6 +21367,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_5 enable_xactengine3_5
 wine_fn_config_makefile dlls/xactengine3_6 enable_xactengine3_6
 wine_fn_config_makefile dlls/xactengine3_7 enable_xactengine3_7
 wine_fn_config_makefile dlls/xapofx1_1 enable_xapofx1_1
diff --git a/configure.ac b/configure.ac
index 9c481d2b0ac..dc4514e2ae2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
     enable_xapofx1_1=${enable_xapofx1_1:-no}
@@ -3906,6 +3907,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_5)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_6)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_7)
 WINE_CONFIG_MAKEFILE(dlls/xapofx1_1)
diff --git a/dlls/xactengine3_5/Makefile.in b/dlls/xactengine3_5/Makefile.in
new file mode 100644
index 00000000000..b9f3f09ff37
--- /dev/null
+++ b/dlls/xactengine3_5/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_5.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0305
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_5/xactengine3_5.spec b/dlls/xactengine3_5/xactengine3_5.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_5/xactengine3_5.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index a6abeb773ca..186bc06537d 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0306
+#if XACT3_VER == 0x0305
+[
+    helpstring("XACT3.5 Class"),
+    threading(both),
+    uuid(074b110f-7f58-4743-aea5-12f15b5074ed)
+]
+coclass XACTEngine35 { interface IXACT37Engine; }
+#elif XACT3_VER == 0x0306
 [
     helpstring("XACT3.6 Class"),
     threading(both),
From 13f9a842c79fffd2437641bb7cf7cf1ba09ee423 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:31 +1000
Subject: [PATCH] xactengine3_4: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_4/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_4/xactengine3_4.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_4/Makefile.in
 create mode 100644 dlls/xactengine3_4/xactengine3_4.spec

diff --git a/configure b/configure
index 69bdebbfba4..12bfd8e07e1 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_4
 enable_xactengine3_5
 enable_xactengine3_6
 enable_xactengine3_7
@@ -16635,6 +16636,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
@@ -21367,6 +21369,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_4 enable_xactengine3_4
 wine_fn_config_makefile dlls/xactengine3_5 enable_xactengine3_5
 wine_fn_config_makefile dlls/xactengine3_6 enable_xactengine3_6
 wine_fn_config_makefile dlls/xactengine3_7 enable_xactengine3_7
diff --git a/configure.ac b/configure.ac
index dc4514e2ae2..af6513274c1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
     enable_xactengine3_7=${enable_xactengine3_7:-no}
@@ -3907,6 +3908,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_4)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_5)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_6)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_7)
diff --git a/dlls/xactengine3_4/Makefile.in b/dlls/xactengine3_4/Makefile.in
new file mode 100644
index 00000000000..f90ca3d32cd
--- /dev/null
+++ b/dlls/xactengine3_4/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_4.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0304
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_4/xactengine3_4.spec b/dlls/xactengine3_4/xactengine3_4.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_4/xactengine3_4.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index 186bc06537d..2a8eee8face 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0305
+#if XACT3_VER == 0x0304
+[
+    helpstring("XACT3.4 Class"),
+    threading(both),
+    uuid(0977d092-2d95-4e43-8d42-9ddcc2545ed5)
+]
+coclass XACTEngine34 { interface IXACT37Engine; }
+#elif XACT3_VER == 0x0305
 [
     helpstring("XACT3.5 Class"),
     threading(both),
From cacbac0963586925ce21995cf7c27f663a059212 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:32 +1000
Subject: [PATCH] xactengine3_3: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_3/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_3/xactengine3_3.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_3/Makefile.in
 create mode 100644 dlls/xactengine3_3/xactengine3_3.spec

diff --git a/configure b/configure
index 12bfd8e07e1..a155ef4f25b 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_3
 enable_xactengine3_4
 enable_xactengine3_5
 enable_xactengine3_6
@@ -16636,6 +16637,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
@@ -21369,6 +21371,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_3 enable_xactengine3_3
 wine_fn_config_makefile dlls/xactengine3_4 enable_xactengine3_4
 wine_fn_config_makefile dlls/xactengine3_5 enable_xactengine3_5
 wine_fn_config_makefile dlls/xactengine3_6 enable_xactengine3_6
diff --git a/configure.ac b/configure.ac
index af6513274c1..838b66df28f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
     enable_xactengine3_6=${enable_xactengine3_6:-no}
@@ -3908,6 +3909,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_3)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_4)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_5)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_6)
diff --git a/dlls/xactengine3_3/Makefile.in b/dlls/xactengine3_3/Makefile.in
new file mode 100644
index 00000000000..cf0155f1bee
--- /dev/null
+++ b/dlls/xactengine3_3/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_3.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0303
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_3/xactengine3_3.spec b/dlls/xactengine3_3/xactengine3_3.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_3/xactengine3_3.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index 2a8eee8face..a8182a1552b 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0304
+#if XACT3_VER == 0x0303
+[
+    helpstring("XACT3.3 Class"),
+    threading(both),
+    uuid(94c1affa-66e7-4961-9521-cfdef3128d4f)
+]
+coclass XACTEngine33 { interface IXACT37Engine; }
+#elif XACT3_VER == 0x0304
 [
     helpstring("XACT3.4 Class"),
     threading(both),
From ea2120b2b165875cada04ecc4ba09eb235e8d04b Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:33 +1000
Subject: [PATCH] xactengine3_2: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_2/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_2/xactengine3_2.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_2/Makefile.in
 create mode 100644 dlls/xactengine3_2/xactengine3_2.spec

diff --git a/configure b/configure
index a155ef4f25b..494ba36e68b 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_2
 enable_xactengine3_3
 enable_xactengine3_4
 enable_xactengine3_5
@@ -16637,6 +16638,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
@@ -21371,6 +21373,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_2 enable_xactengine3_2
 wine_fn_config_makefile dlls/xactengine3_3 enable_xactengine3_3
 wine_fn_config_makefile dlls/xactengine3_4 enable_xactengine3_4
 wine_fn_config_makefile dlls/xactengine3_5 enable_xactengine3_5
diff --git a/configure.ac b/configure.ac
index 838b66df28f..32a6d3c71f7 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
     enable_xactengine3_5=${enable_xactengine3_5:-no}
@@ -3909,6 +3910,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_2)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_3)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_4)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_5)
diff --git a/dlls/xactengine3_2/Makefile.in b/dlls/xactengine3_2/Makefile.in
new file mode 100644
index 00000000000..911888ec6e5
--- /dev/null
+++ b/dlls/xactengine3_2/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_2.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0302
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_2/xactengine3_2.spec b/dlls/xactengine3_2/xactengine3_2.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_2/xactengine3_2.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index a8182a1552b..aa8aede3657 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0303
+#if XACT3_VER == 0x0302
+[
+    helpstring("XACT3.2 Class"),
+    threading(both),
+    uuid(d3332f02-3dd0-4de9-9aec-20d85c4111b6)
+]
+coclass XACTEngine32 { interface IXACT32Engine; }
+#elif XACT3_VER == 0x0303
 [
     helpstring("XACT3.3 Class"),
     threading(both),
From a87a889dca024f1af6a1c547587e23f600e3f643 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:34 +1000
Subject: [PATCH] xactengine3_1: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_1/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_1/xactengine3_1.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_1/Makefile.in
 create mode 100644 dlls/xactengine3_1/xactengine3_1.spec

diff --git a/configure b/configure
index 494ba36e68b..5c88de3e11f 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_1
 enable_xactengine3_2
 enable_xactengine3_3
 enable_xactengine3_4
@@ -16638,6 +16639,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_1=${enable_xactengine3_1:-no}
     enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
@@ -21373,6 +21375,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_1 enable_xactengine3_1
 wine_fn_config_makefile dlls/xactengine3_2 enable_xactengine3_2
 wine_fn_config_makefile dlls/xactengine3_3 enable_xactengine3_3
 wine_fn_config_makefile dlls/xactengine3_4 enable_xactengine3_4
diff --git a/configure.ac b/configure.ac
index 32a6d3c71f7..bd8b6b2d5ac 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_1=${enable_xactengine3_1:-no}
     enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
     enable_xactengine3_4=${enable_xactengine3_4:-no}
@@ -3910,6 +3911,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_1)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_2)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_3)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_4)
diff --git a/dlls/xactengine3_1/Makefile.in b/dlls/xactengine3_1/Makefile.in
new file mode 100644
index 00000000000..f95ea04624c
--- /dev/null
+++ b/dlls/xactengine3_1/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_1.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0301
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_1/xactengine3_1.spec b/dlls/xactengine3_1/xactengine3_1.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_1/xactengine3_1.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index aa8aede3657..aeac5d4cd37 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0302
+#if XACT3_VER == 0x0301
+[
+    helpstring("XACT3.1 Class"),
+    threading(both),
+    uuid(962f5027-99be-4692-a468-85802cf8de61)
+]
+coclass XACTEngine31 { interface IXACT32Engine; }
+#elif XACT3_VER == 0x0302
 [
     helpstring("XACT3.2 Class"),
     threading(both),
From 54222446aabb0920e9d268c229f8460eeb224dc0 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 6 Aug 2020 16:09:35 +1000
Subject: [PATCH] xactengine3_0: New DLL.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 configure                             |  3 +++
 configure.ac                          |  2 ++
 dlls/xactengine3_0/Makefile.in        | 11 +++++++++++
 dlls/xactengine3_0/xactengine3_0.spec |  4 ++++
 dlls/xactengine3_7/xact_classes.idl   |  9 ++++++++-
 5 files changed, 28 insertions(+), 1 deletion(-)
 create mode 100644 dlls/xactengine3_0/Makefile.in
 create mode 100644 dlls/xactengine3_0/xactengine3_0.spec

diff --git a/configure b/configure
index 5c88de3e11f..0493e2a653b 100755
--- a/configure
+++ b/configure
@@ -1707,6 +1707,7 @@ enable_x3daudio1_4
 enable_x3daudio1_5
 enable_x3daudio1_6
 enable_x3daudio1_7
+enable_xactengine3_0
 enable_xactengine3_1
 enable_xactengine3_2
 enable_xactengine3_3
@@ -16639,6 +16640,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_0=${enable_xactengine3_0:-no}
     enable_xactengine3_1=${enable_xactengine3_1:-no}
     enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
@@ -21375,6 +21377,7 @@ wine_fn_config_makefile dlls/x3daudio1_4 enable_x3daudio1_4
 wine_fn_config_makefile dlls/x3daudio1_5 enable_x3daudio1_5
 wine_fn_config_makefile dlls/x3daudio1_6 enable_x3daudio1_6
 wine_fn_config_makefile dlls/x3daudio1_7 enable_x3daudio1_7
+wine_fn_config_makefile dlls/xactengine3_0 enable_xactengine3_0
 wine_fn_config_makefile dlls/xactengine3_1 enable_xactengine3_1
 wine_fn_config_makefile dlls/xactengine3_2 enable_xactengine3_2
 wine_fn_config_makefile dlls/xactengine3_3 enable_xactengine3_3
diff --git a/configure.ac b/configure.ac
index bd8b6b2d5ac..0a556635a2d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1958,6 +1958,7 @@ then
     enable_x3daudio1_5=${enable_x3daudio1_5:-no}
     enable_x3daudio1_6=${enable_x3daudio1_6:-no}
     enable_x3daudio1_7=${enable_x3daudio1_7:-no}
+    enable_xactengine3_0=${enable_xactengine3_0:-no}
     enable_xactengine3_1=${enable_xactengine3_1:-no}
     enable_xactengine3_2=${enable_xactengine3_2:-no}
     enable_xactengine3_3=${enable_xactengine3_3:-no}
@@ -3911,6 +3912,7 @@ WINE_CONFIG_MAKEFILE(dlls/x3daudio1_4)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_5)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_6)
 WINE_CONFIG_MAKEFILE(dlls/x3daudio1_7)
+WINE_CONFIG_MAKEFILE(dlls/xactengine3_0)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_1)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_2)
 WINE_CONFIG_MAKEFILE(dlls/xactengine3_3)
diff --git a/dlls/xactengine3_0/Makefile.in b/dlls/xactengine3_0/Makefile.in
new file mode 100644
index 00000000000..e5c77dcccd7
--- /dev/null
+++ b/dlls/xactengine3_0/Makefile.in
@@ -0,0 +1,11 @@
+MODULE    = xactengine3_0.dll
+IMPORTS   = ole32 uuid
+EXTRADEFS = -DXACT3_VER=0x0300
+PARENTSRC = ../xactengine3_7
+EXTRALIBS = $(FAUDIO_LIBS)
+EXTRAINCL = $(FAUDIO_CFLAGS)
+
+C_SRCS = \
+	xact_dll.c
+
+IDL_SRCS = xact_classes.idl
diff --git a/dlls/xactengine3_0/xactengine3_0.spec b/dlls/xactengine3_0/xactengine3_0.spec
new file mode 100644
index 00000000000..b16365d0c9f
--- /dev/null
+++ b/dlls/xactengine3_0/xactengine3_0.spec
@@ -0,0 +1,4 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index aeac5d4cd37..2ed8d337ac8 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,7 +20,14 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0301
+#if XACT3_VER == 0x0300
+[
+    helpstring("XACT3.0 Class"),
+    threading(both),
+    uuid(3b80ee2a-b0f5-4780-9e30-90cb39685b03)
+]
+coclass XACTEngine30 { interface IXACT30Engine; }
+#elif XACT3_VER == 0x0301
 [
     helpstring("XACT3.1 Class"),
     threading(both),
From 07f4a7aca878e5afc0b6f0bd53b4d365f0596b54 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 7 Aug 2020 16:04:49 +1000
Subject: [PATCH] xactengine3_7: Trace FAudio version being used.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index cb8aed5f3aa..9f1d905b5eb 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -1277,6 +1277,11 @@ BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD reason, void *pReserved)
     case DLL_PROCESS_ATTACH:
         instance = hinstDLL;
         DisableThreadLibraryCalls( hinstDLL );
+
+#ifdef HAVE_FAUDIOLINKEDVERSION
+        TRACE("Using FAudio version %d\n", FAudioLinkedVersion() );
+#endif
+
         break;
     }
     return TRUE;
From 36366de5645eb06b05c7d870a4469fb67a5b778e Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 7 Aug 2020 16:04:50 +1000
Subject: [PATCH] xactengine3_7: Don't cast interface pointers.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 9f1d905b5eb..bd14fc1de73 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -547,7 +547,7 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Prepare(IXACT3WaveBank *iface,
 
     wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
     wave->fact_wave = fwave;
-    *ppWave = (IXACT3Wave*)wave;
+    *ppWave = &wave->IXACT3Wave_iface;
 
     TRACE("Created Wave: %p\n", wave);
 
@@ -589,7 +589,7 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Play(IXACT3WaveBank *iface,
 
         wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
         wave->fact_wave = fwave;
-        *ppWave = (IXACT3Wave*)wave;
+        *ppWave = &wave->IXACT3Wave_iface;
     }
 
     return hr;
@@ -844,7 +844,7 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateSoundBank(IXACT3Engine *iface,
 
     sb->IXACT3SoundBank_iface.lpVtbl = &XACT3SoundBank_Vtbl;
     sb->fact_soundbank = fsb;
-    *ppSoundBank = (IXACT3SoundBank*)sb;
+    *ppSoundBank = &sb->IXACT3SoundBank_iface;
 
     TRACE("Created SoundBank: %p\n", sb);
 
@@ -881,7 +881,7 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *ifac
 
     wb->IXACT3WaveBank_iface.lpVtbl = &XACT3WaveBank_Vtbl;
     wb->fact_wavebank = fwb;
-    *ppWaveBank = (IXACT3WaveBank*)wb;
+    *ppWaveBank = &wb->IXACT3WaveBank_iface;
 
     TRACE("Created in-memory WaveBank: %p\n", wb);
 
@@ -929,7 +929,7 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *ifa
 
     wb->IXACT3WaveBank_iface.lpVtbl = &XACT3WaveBank_Vtbl;
     wb->fact_wavebank = fwb;
-    *ppWaveBank = (IXACT3WaveBank*)wb;
+    *ppWaveBank = &wb->IXACT3WaveBank_iface;
 
     TRACE("Created streaming WaveBank: %p\n", wb);
 
From 9c181981d27ba9eea8afac039f5517fa05f05601 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 7 Aug 2020 16:04:51 +1000
Subject: [PATCH] xactengine3_7: Correct callback to windows function.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index bd14fc1de73..0ac0d914b3a 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -634,6 +634,7 @@ typedef struct _XACT3EngineImpl {
 
     XACT_READFILE_CALLBACK pReadFile;
     XACT_GETOVERLAPPEDRESULT_CALLBACK pGetOverlappedResult;
+    XACT_NOTIFICATION_CALLBACK notification_callback;
 } XACT3EngineImpl;
 
 typedef struct wrap_readfile_struct {
@@ -745,6 +746,25 @@ static HRESULT WINAPI IXACT3EngineImpl_GetFinalMixFormat(IXACT3Engine *iface,
             (FAudioWaveFormatExtensible*) pFinalMixFormat);
 }
 
+static void FACTCALL fact_notification_cb(const FACTNotification *notification)
+{
+    XACT3EngineImpl *engine = (XACT3EngineImpl *)notification->pvContext;
+
+    /* Older versions of FAudio don't pass through the context */
+    if (!engine)
+    {
+        WARN("Notification context is NULL\n");
+        return;
+    }
+
+    if (notification->type == XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED)
+    {
+        FIXME("Callback XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED\n");
+    }
+    else
+        FIXME("Unsupported callback type %d\n", notification->type);
+}
+
 static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
         const XACT_RUNTIME_PARAMETERS *pParams)
 {
@@ -788,6 +808,9 @@ static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
                 GetOverlappedResult;
     params.fileIOCallbacks.readFileCallback = wrap_readfile;
     params.fileIOCallbacks.getOverlappedResultCallback = wrap_getoverlappedresult;
+    params.fnNotificationCallback = fact_notification_cb;
+
+    This->notification_callback = (XACT_NOTIFICATION_CALLBACK)pParams->fnNotificationCallback;
 
     ret = FACTAudioEngine_Initialize(This->fact_engine, &params);
     if (ret != 0)
@@ -1062,6 +1085,7 @@ static HRESULT WINAPI IXACT3EngineImpl_RegisterNotification(IXACT3Engine *iface,
     TRACE("(%p)->(%p)\n", This, pNotificationDesc);
 
     unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    fdesc.pvContext = This;
     return FACTAudioEngine_RegisterNotification(This->fact_engine, &fdesc);
 }
 
@@ -1074,6 +1098,7 @@ static HRESULT WINAPI IXACT3EngineImpl_UnRegisterNotification(IXACT3Engine *ifac
     TRACE("(%p)->(%p)\n", This, pNotificationDesc);
 
     unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    fdesc.pvContext = This;
     return FACTAudioEngine_UnRegisterNotification(This->fact_engine, &fdesc);
 }
 
From f810a1ee8b95fe9aa01300ff0146188b6f79d351 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Mon, 10 Aug 2020 18:14:51 +0200
Subject: [PATCH] include: Add missing WAVEBANKENTRY_FLAGS to xact3wb.h.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xact3wb.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/include/xact3wb.h b/include/xact3wb.h
index 81b1518930d..6d157a466f9 100644
--- a/include/xact3wb.h
+++ b/include/xact3wb.h
@@ -105,6 +105,12 @@ typedef const WAVEBANKHEADER *LPCWAVEBANKHEADER;
 #define WAVEBANKENTRY_XMASTREAMS_MAX  3
 #define WAVEBANKENTRY_XMACHANNELS_MAX 6
 
+#define WAVEBANKENTRY_FLAGS_READAHEAD         0x00000001
+#define WAVEBANKENTRY_FLAGS_LOOPCACHE         0x00000002
+#define WAVEBANKENTRY_FLAGS_REMOVELOOPTAIL    0x00000004
+#define WAVEBANKENTRY_FLAGS_IGNORELOOP        0x00000008
+#define WAVEBANKENTRY_FLAGS_MASK              0x00000008
+
 typedef struct WAVEBANKENTRY
 {
     union
From 369723014c93c6d14c5415d7a5c9627f9dc8975e Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Tue, 11 Aug 2020 10:43:02 +0200
Subject: [PATCH] include: Fix the spelling of XACT_WAVE_STREAMING_PARAMETERS
 in xact3.h.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 2 +-
 include/xact3.h               | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 0ac0d914b3a..c5f96decb72 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -912,7 +912,7 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *ifac
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *iface,
-        const XACT_STREAMING_PARAMETERS *pParms,
+        const XACT_WAVEBANK_STREAMING_PARAMETERS *pParms,
         IXACT3WaveBank **ppWaveBank)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
diff --git a/include/xact3.h b/include/xact3.h
index 2b4f0e07f3c..63eec707363 100644
--- a/include/xact3.h
+++ b/include/xact3.h
@@ -225,9 +225,9 @@ typedef struct XACT_STREAMING_PARAMETERS
     DWORD offset;
     DWORD flags;
     WORD packetSize;
-} XACT_STREAMING_PARAMETERS, *LPXACT_STREAMING_PARAMETERS, XACT_WAVE_STREAMING_PARAMETERS, *LPXACT_WAVE_STREAMING_PARAMETERS;
+} XACT_STREAMING_PARAMETERS, *LPXACT_STREAMING_PARAMETERS, XACT_WAVEBANK_STREAMING_PARAMETERS, *LPXACT_WAVEBANK_STREAMING_PARAMETERS;
 typedef const XACT_STREAMING_PARAMETERS *LPCXACT_STREAMING_PARAMETERS;
-typedef const XACT_WAVE_STREAMING_PARAMETERS *LPCXACT_WAVE_STREAMING_PARAMETERS;
+typedef const XACT_WAVEBANK_STREAMING_PARAMETERS *LPCXACT_WAVEBANK_STREAMING_PARAMETERS;
 
 typedef struct XACT_CUE_PROPERTIES
 {
@@ -674,7 +674,7 @@ DECLARE_INTERFACE_(IXACT3Engine,IUnknown)
     STDMETHOD(DoWork)(THIS) PURE;
     STDMETHOD(CreateSoundBank)(THIS_ const void *pvBuffer, DWORD dwSize, DWORD dwFlags, DWORD dwAllocAttributes, IXACT3SoundBank **ppSoundBank) PURE;
     STDMETHOD(CreateInMemoryWaveBank)(THIS_ const void *pvBuffer, DWORD dwSize, DWORD dwFlags, DWORD dwAllocAttributes, IXACT3WaveBank **ppWaveBank) PURE;
-    STDMETHOD(CreateStreamingWaveBank)(THIS_ const XACT_WAVE_STREAMING_PARAMETERS *pParams, IXACT3WaveBank **ppWaveBank) PURE;
+    STDMETHOD(CreateStreamingWaveBank)(THIS_ const XACT_WAVEBANK_STREAMING_PARAMETERS *pParams, IXACT3WaveBank **ppWaveBank) PURE;
     STDMETHOD(PrepareWave)(THIS_ DWORD dwFlags, PCSTR szWavePath, WORD wStreamingPacketSize, DWORD dwAlignment,
                            DWORD dwPlayOffset, XACTLOOPCOUNT nLoopCount, IXACT3Wave **ppWave) PURE;
     STDMETHOD(PrepareInMemoryWave)(THIS_ DWORD dwFlags, WAVEBANKENTRY entry, DWORD *pdwSeekTable, BYTE *pbWaveData,
From 4ee67e19960b8f05f2ed98cf359fd9231491d057 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Thu, 13 Aug 2020 17:18:39 -0500
Subject: [PATCH] xactengine3: Reduce code duplication in xact_classes.idl.

Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_classes.idl | 42 +++--------------------------
 1 file changed, 3 insertions(+), 39 deletions(-)

diff --git a/dlls/xactengine3_7/xact_classes.idl b/dlls/xactengine3_7/xact_classes.idl
index 2ed8d337ac8..40c00f4ff06 100644
--- a/dlls/xactengine3_7/xact_classes.idl
+++ b/dlls/xactengine3_7/xact_classes.idl
@@ -20,60 +20,24 @@
 
 #pragma makedep register
 
-#if XACT3_VER == 0x0300
 [
-    helpstring("XACT3.0 Class"),
     threading(both),
+#if XACT3_VER == 0x0300
     uuid(3b80ee2a-b0f5-4780-9e30-90cb39685b03)
-]
-coclass XACTEngine30 { interface IXACT30Engine; }
 #elif XACT3_VER == 0x0301
-[
-    helpstring("XACT3.1 Class"),
-    threading(both),
     uuid(962f5027-99be-4692-a468-85802cf8de61)
-]
-coclass XACTEngine31 { interface IXACT32Engine; }
 #elif XACT3_VER == 0x0302
-[
-    helpstring("XACT3.2 Class"),
-    threading(both),
     uuid(d3332f02-3dd0-4de9-9aec-20d85c4111b6)
-]
-coclass XACTEngine32 { interface IXACT32Engine; }
 #elif XACT3_VER == 0x0303
-[
-    helpstring("XACT3.3 Class"),
-    threading(both),
     uuid(94c1affa-66e7-4961-9521-cfdef3128d4f)
-]
-coclass XACTEngine33 { interface IXACT37Engine; }
 #elif XACT3_VER == 0x0304
-[
-    helpstring("XACT3.4 Class"),
-    threading(both),
     uuid(0977d092-2d95-4e43-8d42-9ddcc2545ed5)
-]
-coclass XACTEngine34 { interface IXACT37Engine; }
 #elif XACT3_VER == 0x0305
-[
-    helpstring("XACT3.5 Class"),
-    threading(both),
     uuid(074b110f-7f58-4743-aea5-12f15b5074ed)
-]
-coclass XACTEngine35 { interface IXACT37Engine; }
 #elif XACT3_VER == 0x0306
-[
-    helpstring("XACT3.6 Class"),
-    threading(both),
     uuid(248d8a3b-6256-44d3-a018-2ac96c459f47)
-]
-coclass XACTEngine36 { interface IXACT37Engine; }
 #else /* XACT3_VER == 0x0307 or not defined */
-[
-    helpstring("XACT3.7 Class"),
-    threading(both),
     uuid(bcc782bc-6492-4c22-8c35-f5d72fe73c6e)
-]
-coclass XACTEngine37 { interface IXACT37Engine; }
 #endif
+]
+coclass XACTEngine {}
From 3076d37af8b91805945fd81f59c9a512cbcf8f73 Mon Sep 17 00:00:00 2001
From: Biswapriyo Nath <nathbappai@gmail.com>
Date: Thu, 13 Aug 2020 10:47:49 +0530
Subject: [PATCH] include/xaudio2.idl: Use cpp_quote for xaudio2 error codes.

Signed-off-by: Biswapriyo Nath <nathbappai@gmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 include/xaudio2.idl | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/include/xaudio2.idl b/include/xaudio2.idl
index 074454d4906..3201e86e31a 100644
--- a/include/xaudio2.idl
+++ b/include/xaudio2.idl
@@ -1243,15 +1243,16 @@ const UINT32 XAUDIO2_QUANTUM_NUMERATOR = 1;
 const UINT32 XAUDIO2_QUANTUM_DENOMINATOR = 100;
 const float XAUDIO2_QUANTUM_MS = (1000.0 * XAUDIO2_QUANTUM_NUMERATOR / XAUDIO2_QUANTUM_DENOMINATOR);
 
-const HRESULT XAUDIO2_E_INVALID_CALL = 0x88960001;
-const HRESULT XAUDIO2_E_XMA_DECODER_ERROR = 0x88960002;
-const HRESULT XAUDIO2_E_XAPO_CREATION_FAILED = 0x88960003;
-const HRESULT XAUDIO2_E_DEVICE_INVALIDATED = 0x88960004;
+/* use cpp_quote to retain the HRESULT type in header file */
+cpp_quote("#define XAUDIO2_E_INVALID_CALL ((HRESULT)0x88960001)")
+cpp_quote("#define XAUDIO2_E_XMA_DECODER_ERROR ((HRESULT)0x88960002)")
+cpp_quote("#define XAUDIO2_E_XAPO_CREATION_FAILED ((HRESULT)0x88960003)")
+cpp_quote("#define XAUDIO2_E_DEVICE_INVALIDATED ((HRESULT)0x88960004)")
 
 /* xaudio 2.0 error codes */
-const HRESULT XAUDIO20_E_XMA_DECODER_ERROR = 0x88960001;
-const HRESULT XAUDIO20_E_XAPO_CREATION_FAILED = 0x88960002;
-const HRESULT XAUDIO20_E_DEVICE_INVALIDATED = 0x88960003;
+cpp_quote("#define XAUDIO20_E_XMA_DECODER_ERROR ((HRESULT)0x88960001)")
+cpp_quote("#define XAUDIO20_E_XAPO_CREATION_FAILED ((HRESULT)0x88960002)")
+cpp_quote("#define XAUDIO20_E_DEVICE_INVALIDATED ((HRESULT)0x88960003)")
 
 cpp_quote("#ifdef XAUDIO2_HELPER_FUNCTIONS")
 cpp_quote("#define _USE_MATH_DEFINES")
From 34fad63be385d80ebee850eb4ae613ea23f758b3 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 14 Aug 2020 17:16:07 +1000
Subject: [PATCH 1/3] xactengine3_7: Implement IXACT3Engine PrepareWave

v2: Deal with FACTAudioEngine_PrepareWave isn't implemented.

Wine-bug: https://bugs.winehq.org/show_bug.cgi?id=49689

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/xactengine3_7/xact_dll.c | 32 ++++++++++++++++++++++++++++++--
 1 file changed, 30 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index c5f96decb72..5bcd8a6202c 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -986,8 +986,36 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareWave(IXACT3Engine *iface,
         IXACT3Wave **ppWave)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p): stub!\n", This);
-    return E_NOTIMPL;
+    XACT3WaveImpl *wave;
+    FACTWave *fwave = NULL;
+    UINT ret;
+
+    TRACE("(%p)->(0x%08x, %s, %d, %d, %d, %d, %p)\n", This, dwFlags, debugstr_a(szWavePath),
+          wStreamingPacketSize, dwAlignment, dwPlayOffset, nLoopCount, ppWave);
+
+    ret = FACTAudioEngine_PrepareWave(This->fact_engine, dwFlags, szWavePath, wStreamingPacketSize,
+            dwAlignment, dwPlayOffset, nLoopCount, &fwave);
+    if(ret != 0 || !fwave)
+    {
+        ERR("Failed to CreateWave: %d (%p)\n", ret, fwave);
+        return E_FAIL;
+    }
+
+    wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+    if (!wave)
+    {
+        FACTWave_Destroy(fwave);
+        ERR("Failed to allocate XACT3WaveImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
+    wave->fact_wave = fwave;
+    *ppWave = &wave->IXACT3Wave_iface;
+
+    TRACE("Created Wave: %p\n", wave);
+
+    return S_OK;
 }
 
 enum {
-- 
2.28.0
From ff3d57ac0bc2f08ab955c3ae734cb488566246c8 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Sat, 15 Aug 2020 17:36:23 +1000
Subject: [PATCH 2/3] xactengine3_7: Implement IXACT3Engine
 PrepareStreamingWave

---
 dlls/xactengine3_7/xact_dll.c | 55 +++++++++++++++++++++++++++++++++--
 1 file changed, 53 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 5bcd8a6202c..99e4bd19049 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -976,8 +976,59 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareStreamingWave(IXACT3Engine *iface,
         IXACT3Wave **ppWave)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p): stub!\n", This);
-    return E_NOTIMPL;
+    XACT3WaveImpl *wave;
+    FACTWave *fwave = NULL;
+    FACTStreamingParameters fakeParms;
+    wrap_readfile_struct *fake;
+    FACTWaveBankEntry fact_wavebank;
+    UINT ret;
+
+    TRACE("(%p)->(0x%08x, %p, %p, %d, %p, %d, %d, %p)\n", This, dwFlags, &entry, &streamingParams,
+            dwAlignment, pdwSeekTable, dwPlayOffset, nLoopCount, ppWave);
+
+    fake = (wrap_readfile_struct*) CoTaskMemAlloc(
+            sizeof(wrap_readfile_struct));
+    fake->engine = This;
+    fake->file = streamingParams.file;
+    fakeParms.file = fake;
+    fakeParms.flags = streamingParams.flags;
+    fakeParms.offset = streamingParams.offset;
+    fakeParms.packetSize = streamingParams.packetSize;
+
+    fact_wavebank.dwFlagsAndDuration = entry.u.dwFlagsAndDuration;
+    fact_wavebank.Format.dwValue = entry.Format.dwValue;
+    fact_wavebank.PlayRegion.dwOffset = entry.PlayRegion.dwOffset;
+    fact_wavebank.PlayRegion.dwLength = entry.PlayRegion.dwLength;
+    fact_wavebank.LoopRegion.dwStartSample = entry.LoopRegion.dwStartSample;
+    fact_wavebank.LoopRegion.dwTotalSamples = entry.LoopRegion.dwTotalSamples;
+
+    /* FAudio Prototype is incorrect and shouldn't take a buffer as an parameter,
+     *   passing through NULL to ensure it's not used.
+     */
+    ret = FACTAudioEngine_PrepareStreamingWave(This->fact_engine, dwFlags, fact_wavebank, fakeParms,
+            dwAlignment, pdwSeekTable, NULL, dwPlayOffset, nLoopCount, &fwave);
+
+    if(ret != 0 || !fwave)
+    {
+        ERR("Failed to CreateWave: %d (%p)\n", ret, fwave);
+        return E_FAIL;
+    }
+
+    wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+    if (!wave)
+    {
+        FACTWave_Destroy(fwave);
+        ERR("Failed to allocate XACT3WaveImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
+    wave->fact_wave = fwave;
+    *ppWave = &wave->IXACT3Wave_iface;
+
+    TRACE("Created Wave: %p\n", wave);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_PrepareWave(IXACT3Engine *iface,
-- 
2.28.0
From 8387b1a1a4a07b66246015e3791518cbe1a69244 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 15 Aug 2020 17:49:23 +1000
Subject: [PATCH 3/3] xactengine3_7: Implement IXACT3Engine PrepareInMemoryWave

---
 dlls/xactengine3_7/xact_dll.c | 40 +++++++++++++++++++++++++++++++++--
 1 file changed, 38 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 99e4bd19049..e6c3863b9ee 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -965,8 +965,44 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareInMemoryWave(IXACT3Engine *iface,
         IXACT3Wave **ppWave)
 {
     XACT3EngineImpl *This = impl_from_IXACT3Engine(iface);
-    FIXME("(%p): stub!\n", This);
-    return E_NOTIMPL;
+    XACT3WaveImpl *wave;
+    FACTWave *fwave = NULL;
+    FACTWaveBankEntry fact_wavebank;
+    UINT ret;
+
+    TRACE("(%p)->(0x%08x, %p, %p, %p, %d, %d, %p)\n", This, dwFlags, &entry, pdwSeekTable,
+          pbWaveData, dwPlayOffset, nLoopCount, ppWave);
+
+    fact_wavebank.dwFlagsAndDuration = entry.u.dwFlagsAndDuration;
+    fact_wavebank.Format.dwValue = entry.Format.dwValue;
+    fact_wavebank.PlayRegion.dwOffset = entry.PlayRegion.dwOffset;
+    fact_wavebank.PlayRegion.dwLength = entry.PlayRegion.dwLength;
+    fact_wavebank.LoopRegion.dwStartSample = entry.LoopRegion.dwStartSample;
+    fact_wavebank.LoopRegion.dwTotalSamples = entry.LoopRegion.dwTotalSamples;
+
+    ret = FACTAudioEngine_PrepareInMemoryWave(This->fact_engine, dwFlags, fact_wavebank,
+            pdwSeekTable, pbWaveData, dwPlayOffset, nLoopCount, &fwave);
+    if(ret != 0 || !fwave)
+    {
+        ERR("Failed to CreateWave: %d (%p)\n", ret, fwave);
+        return E_FAIL;
+    }
+
+    wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+    if (!wave)
+    {
+        FACTWave_Destroy(fwave);
+        ERR("Failed to allocate XACT3WaveImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
+    wave->fact_wave = fwave;
+    *ppWave = &wave->IXACT3Wave_iface;
+
+    TRACE("Created Wave: %p\n", wave);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_PrepareStreamingWave(IXACT3Engine *iface,
-- 
2.28.0

From 14c6933f3f5a40d219a0597107bed379f5caeb03 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 15 Sep 2020 19:45:17 +1000
Subject: [PATCH] xactengine3_7: Return S_OK from IXACT3Cue Destroy.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/xactengine3_7/xact_dll.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index c5f96decb72..742fe86cc95 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -73,13 +73,15 @@ static HRESULT WINAPI IXACT3CueImpl_GetState(IXACT3Cue *iface, DWORD *pdwState)
 static HRESULT WINAPI IXACT3CueImpl_Destroy(IXACT3Cue *iface)
 {
     XACT3CueImpl *This = impl_from_IXACT3Cue(iface);
-    HRESULT hr;
+    UINT ret;
 
     TRACE("(%p)\n", iface);
 
-    hr = FACTCue_Destroy(This->fact_cue);
+    ret = FACTCue_Destroy(This->fact_cue);
+    if (ret != 0)
+        WARN("FACTCue_Destroy returned %d\n", ret);
     HeapFree(GetProcessHeap(), 0, This);
-    return hr;
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACT3CueImpl_SetMatrixCoefficients(IXACT3Cue *iface,
